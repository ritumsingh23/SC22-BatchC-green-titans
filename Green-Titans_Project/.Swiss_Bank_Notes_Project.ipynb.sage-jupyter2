{"backend_state":"running","connection_file":"/projects/d5de4790-84b9-4555-9a80-ef455fafa128/.local/share/jupyter/runtime/kernel-dc13c703-8a7d-40b7-a413-63c9d838401c.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1659537247429,"exec_count":1,"id":"8ac3ec","input":"import pandas as pd\nimport numpy as np\nimport plotly.express as px\n","kernel":"ds_env","no_halt":true,"pos":3,"start":1659537247003,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537247540,"exec_count":2,"id":"d23109","input":"banknotes_dataset = pd.read_csv(\"banknotes.csv\")","kernel":"ds_env","no_halt":true,"pos":4,"start":1659537247516,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537247610,"exec_count":3,"id":"0b6848","input":"banknotes_dataset.rename(index=str, columns={'conterfeit': 'Counterfeit'}, inplace=True) ","kernel":"ds_env","no_halt":true,"pos":5,"start":1659537247569,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537247711,"exec_count":4,"id":"f20913","input":"new_df = []\n# Step 1: loop over each row in the dataset\nfor row in banknotes_dataset.itertuples():\n    temp_list = []\n    if row[6] == 11.2 and row[5] == 8 and row[7] == 139.6 and row[1] == 0:\n        print('first_outlier!')\n    elif row[4] == 130.2 and row[3] == 130.2 and row[7] ==139.6:\n        print('outlier2')   \n    elif row[6] == 11.7 and row[5] == 7.9 and row[3] ==130.4:\n        print('outlier3')\n    elif row[6] ==11.1 and row[5] == 9 and row[3] ==130.7:\n        print('outlier4')\n    elif row[3] ==129.6 and row[4] ==129.7 and row[5]== 10.4:\n        print('outlier5')\n    elif row[2] ==214.9 and row[7] ==139.6 and row[6] ==11.2:\n        print('outlier6')\n    else:\n        temp_list.append(list(row))\n        new_df.append(temp_list[0])\n\nnew_banknotes_dataset = pd.DataFrame(new_df, columns = [\"Index\", 'Counterfeit', 'Length', 'Left', 'Right', 'Bottom', 'Top', 'Diagonal'])\nnew_banknotes_dataset.drop('Index', axis = 1)\n","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"outlier5\noutlier3\nfirst_outlier!\noutlier4\n"},"1":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Counterfeit</th>\n      <th>Length</th>\n      <th>Left</th>\n      <th>Right</th>\n      <th>Bottom</th>\n      <th>Top</th>\n      <th>Diagonal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>131.0</td>\n      <td>131.1</td>\n      <td>9.0</td>\n      <td>9.7</td>\n      <td>141.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>214.6</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.1</td>\n      <td>9.5</td>\n      <td>141.7</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.7</td>\n      <td>9.6</td>\n      <td>142.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.6</td>\n      <td>7.5</td>\n      <td>10.4</td>\n      <td>142.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>215.7</td>\n      <td>130.8</td>\n      <td>130.5</td>\n      <td>9.0</td>\n      <td>10.1</td>\n      <td>141.4</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>191</th>\n      <td>1</td>\n      <td>215.0</td>\n      <td>130.4</td>\n      <td>130.3</td>\n      <td>9.9</td>\n      <td>12.1</td>\n      <td>139.6</td>\n    </tr>\n    <tr>\n      <th>192</th>\n      <td>1</td>\n      <td>215.1</td>\n      <td>130.3</td>\n      <td>129.9</td>\n      <td>10.3</td>\n      <td>11.5</td>\n      <td>139.7</td>\n    </tr>\n    <tr>\n      <th>193</th>\n      <td>1</td>\n      <td>214.8</td>\n      <td>130.3</td>\n      <td>130.4</td>\n      <td>10.6</td>\n      <td>11.1</td>\n      <td>140.0</td>\n    </tr>\n    <tr>\n      <th>194</th>\n      <td>1</td>\n      <td>214.7</td>\n      <td>130.7</td>\n      <td>130.8</td>\n      <td>11.2</td>\n      <td>11.2</td>\n      <td>139.4</td>\n    </tr>\n    <tr>\n      <th>195</th>\n      <td>1</td>\n      <td>214.3</td>\n      <td>129.9</td>\n      <td>129.9</td>\n      <td>10.2</td>\n      <td>11.5</td>\n      <td>139.6</td>\n    </tr>\n  </tbody>\n</table>\n<p>196 rows Ã— 7 columns</p>\n</div>","text/plain":"     Counterfeit  Length   Left  Right  Bottom   Top  Diagonal\n0              0   214.8  131.0  131.1     9.0   9.7     141.0\n1              0   214.6  129.7  129.7     8.1   9.5     141.7\n2              0   214.8  129.7  129.7     8.7   9.6     142.2\n3              0   214.8  129.7  129.6     7.5  10.4     142.0\n4              0   215.7  130.8  130.5     9.0  10.1     141.4\n..           ...     ...    ...    ...     ...   ...       ...\n191            1   215.0  130.4  130.3     9.9  12.1     139.6\n192            1   215.1  130.3  129.9    10.3  11.5     139.7\n193            1   214.8  130.3  130.4    10.6  11.1     140.0\n194            1   214.7  130.7  130.8    11.2  11.2     139.4\n195            1   214.3  129.9  129.9    10.2  11.5     139.6\n\n[196 rows x 7 columns]"},"exec_count":4}},"pos":7,"start":1659537247681,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537247725,"exec_count":5,"id":"f2c2b4","input":"new_banknotes_dataset.shape","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"(196, 8)"},"exec_count":5}},"pos":8,"start":1659537247723,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537247734,"exec_count":6,"id":"2a790b","input":"# Step 2: ","kernel":"ds_env","no_halt":true,"pos":9,"start":1659537247730,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537247762,"exec_count":7,"id":"4767e6","input":"banknotes_dataset.head()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Counterfeit</th>\n      <th>Length</th>\n      <th>Left</th>\n      <th>Right</th>\n      <th>Bottom</th>\n      <th>Top</th>\n      <th>Diagonal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>131.0</td>\n      <td>131.1</td>\n      <td>9.0</td>\n      <td>9.7</td>\n      <td>141.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>214.6</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.1</td>\n      <td>9.5</td>\n      <td>141.7</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.7</td>\n      <td>9.6</td>\n      <td>142.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.6</td>\n      <td>7.5</td>\n      <td>10.4</td>\n      <td>142.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>215.0</td>\n      <td>129.6</td>\n      <td>129.7</td>\n      <td>10.4</td>\n      <td>7.7</td>\n      <td>141.8</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   Counterfeit  Length   Left  Right  Bottom   Top  Diagonal\n0            0   214.8  131.0  131.1     9.0   9.7     141.0\n1            0   214.6  129.7  129.7     8.1   9.5     141.7\n2            0   214.8  129.7  129.7     8.7   9.6     142.2\n3            0   214.8  129.7  129.6     7.5  10.4     142.0\n4            0   215.0  129.6  129.7    10.4   7.7     141.8"},"exec_count":7}},"pos":11,"scrolled":true,"start":1659537247737,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537247770,"exec_count":8,"id":"7ae2f4","input":"# Nolawi","kernel":"ds_env","no_halt":true,"pos":13,"start":1659537247767,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537247788,"exec_count":9,"id":"a02ab4","input":"banknotes_dataset.tail()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Counterfeit</th>\n      <th>Length</th>\n      <th>Left</th>\n      <th>Right</th>\n      <th>Bottom</th>\n      <th>Top</th>\n      <th>Diagonal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>195</th>\n      <td>1</td>\n      <td>215.0</td>\n      <td>130.4</td>\n      <td>130.3</td>\n      <td>9.9</td>\n      <td>12.1</td>\n      <td>139.6</td>\n    </tr>\n    <tr>\n      <th>196</th>\n      <td>1</td>\n      <td>215.1</td>\n      <td>130.3</td>\n      <td>129.9</td>\n      <td>10.3</td>\n      <td>11.5</td>\n      <td>139.7</td>\n    </tr>\n    <tr>\n      <th>197</th>\n      <td>1</td>\n      <td>214.8</td>\n      <td>130.3</td>\n      <td>130.4</td>\n      <td>10.6</td>\n      <td>11.1</td>\n      <td>140.0</td>\n    </tr>\n    <tr>\n      <th>198</th>\n      <td>1</td>\n      <td>214.7</td>\n      <td>130.7</td>\n      <td>130.8</td>\n      <td>11.2</td>\n      <td>11.2</td>\n      <td>139.4</td>\n    </tr>\n    <tr>\n      <th>199</th>\n      <td>1</td>\n      <td>214.3</td>\n      <td>129.9</td>\n      <td>129.9</td>\n      <td>10.2</td>\n      <td>11.5</td>\n      <td>139.6</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"     Counterfeit  Length   Left  Right  Bottom   Top  Diagonal\n195            1   215.0  130.4  130.3     9.9  12.1     139.6\n196            1   215.1  130.3  129.9    10.3  11.5     139.7\n197            1   214.8  130.3  130.4    10.6  11.1     140.0\n198            1   214.7  130.7  130.8    11.2  11.2     139.4\n199            1   214.3  129.9  129.9    10.2  11.5     139.6"},"exec_count":9}},"pos":14,"scrolled":true,"start":1659537247784,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537247810,"exec_count":10,"id":"736b1a","input":"banknotes_dataset.drop_duplicates(inplace=True)","kernel":"ds_env","no_halt":true,"pos":15,"start":1659537247795,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537247837,"exec_count":11,"id":"476463","input":"banknotes_dataset","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Counterfeit</th>\n      <th>Length</th>\n      <th>Left</th>\n      <th>Right</th>\n      <th>Bottom</th>\n      <th>Top</th>\n      <th>Diagonal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>131.0</td>\n      <td>131.1</td>\n      <td>9.0</td>\n      <td>9.7</td>\n      <td>141.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>214.6</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.1</td>\n      <td>9.5</td>\n      <td>141.7</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.7</td>\n      <td>9.6</td>\n      <td>142.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.6</td>\n      <td>7.5</td>\n      <td>10.4</td>\n      <td>142.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>215.0</td>\n      <td>129.6</td>\n      <td>129.7</td>\n      <td>10.4</td>\n      <td>7.7</td>\n      <td>141.8</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>195</th>\n      <td>1</td>\n      <td>215.0</td>\n      <td>130.4</td>\n      <td>130.3</td>\n      <td>9.9</td>\n      <td>12.1</td>\n      <td>139.6</td>\n    </tr>\n    <tr>\n      <th>196</th>\n      <td>1</td>\n      <td>215.1</td>\n      <td>130.3</td>\n      <td>129.9</td>\n      <td>10.3</td>\n      <td>11.5</td>\n      <td>139.7</td>\n    </tr>\n    <tr>\n      <th>197</th>\n      <td>1</td>\n      <td>214.8</td>\n      <td>130.3</td>\n      <td>130.4</td>\n      <td>10.6</td>\n      <td>11.1</td>\n      <td>140.0</td>\n    </tr>\n    <tr>\n      <th>198</th>\n      <td>1</td>\n      <td>214.7</td>\n      <td>130.7</td>\n      <td>130.8</td>\n      <td>11.2</td>\n      <td>11.2</td>\n      <td>139.4</td>\n    </tr>\n    <tr>\n      <th>199</th>\n      <td>1</td>\n      <td>214.3</td>\n      <td>129.9</td>\n      <td>129.9</td>\n      <td>10.2</td>\n      <td>11.5</td>\n      <td>139.6</td>\n    </tr>\n  </tbody>\n</table>\n<p>200 rows Ã— 7 columns</p>\n</div>","text/plain":"     Counterfeit  Length   Left  Right  Bottom   Top  Diagonal\n0              0   214.8  131.0  131.1     9.0   9.7     141.0\n1              0   214.6  129.7  129.7     8.1   9.5     141.7\n2              0   214.8  129.7  129.7     8.7   9.6     142.2\n3              0   214.8  129.7  129.6     7.5  10.4     142.0\n4              0   215.0  129.6  129.7    10.4   7.7     141.8\n..           ...     ...    ...    ...     ...   ...       ...\n195            1   215.0  130.4  130.3     9.9  12.1     139.6\n196            1   215.1  130.3  129.9    10.3  11.5     139.7\n197            1   214.8  130.3  130.4    10.6  11.1     140.0\n198            1   214.7  130.7  130.8    11.2  11.2     139.4\n199            1   214.3  129.9  129.9    10.2  11.5     139.6\n\n[200 rows x 7 columns]"},"exec_count":11}},"pos":16,"start":1659537247821,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537247848,"exec_count":12,"id":"80815f","input":"# Dhrupadh","kernel":"ds_env","no_halt":true,"pos":20,"start":1659537247846,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537248353,"exec_count":15,"id":"36c03b","input":"#plot 3\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Top', y='Bottom', z='Left', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"619d9b9f1352a492894728e5d3439c271e0afee0"}}},"pos":23,"start":1659537248301,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537248415,"exec_count":16,"id":"82f5cc","input":"#plot 4\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Top', y='Bottom', z='Right', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"28afe75d5e321c18346640bdb57488936c50c32c"}}},"pos":24,"start":1659537248357,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537248480,"exec_count":17,"id":"aabc35","input":"#plot 5\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Left', y='Right', z='Top', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"c27e170ba55e1fe20a2757e2c05e5f2a44097cc7"}}},"pos":25,"start":1659537248424,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537248609,"exec_count":19,"id":"ac033e","input":"#plot 7\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Length', y='Diagonal', z='Top', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"e14719a8a5c33b878dd7330aea05b0b77664ce42"}}},"pos":27,"start":1659537248559,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537248684,"exec_count":20,"id":"52f772","input":"#plot 8\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Length', y='Diagonal', z='Bottom', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"d77ef85aa899df01efe6f7ba9ea40fad460f6509"}}},"pos":28,"start":1659537248614,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537248754,"exec_count":21,"id":"567e86","input":"#plot 9\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Length', y='Diagonal', z='Left', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"87bc359a81b9200d7696d59287beca74ab6a7019"}}},"pos":29,"start":1659537248698,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537248834,"exec_count":22,"id":"c090db","input":"#plot 10\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Length', y='Diagonal', z='Right', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"4849315ca16063dc2364328cc473f9a5c3adb391"}}},"pos":30,"start":1659537248763,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537248902,"exec_count":23,"id":"b5bbd3","input":"#plot 11\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Left', y='Right', z='Length', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"13b9bc6c34ca49a3af9663b221cd7e40e353387f"}}},"pos":31,"start":1659537248843,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537248989,"exec_count":24,"id":"81ac18","input":"#plot 12\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Top', y='Bottom', z='Length', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"6389796b126f26c6cff4467c9bbe93ed158f892b"}}},"pos":32,"start":1659537248915,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537249062,"exec_count":25,"id":"1015cb","input":"fig = px.scatter(new_banknotes_dataset, x=\"Bottom\", y=\"Length\", color= 'Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"c4006883ce9e00b09164084f2a0ac09646470c2c"}}},"pos":35,"start":1659537248999,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537249200,"exec_count":27,"id":"85ecf5","input":"fig = px.scatter(new_banknotes_dataset, x=\"Right\", y=\"Left\", color= 'Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"885e8f26d61fc01f562a9e9c343da17de3111316"}}},"pos":37,"start":1659537249144,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537250077,"exec_count":28,"id":"e85d9c","input":"df = new_banknotes_dataset[\"Left\"].hist()\n","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"image/png":"bf6da964ab23a1a216e98ad2c64ca5ef9f95fe1c","text/plain":"<Figure size 432x288 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":38,"start":1659537249205,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537250225,"exec_count":29,"id":"bd75de","input":"df = new_banknotes_dataset[\"Right\"].hist()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"image/png":"ad3234fc9a47e724a7f2a33b8a5e377df777ef79","text/plain":"<Figure size 432x288 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":39,"scrolled":true,"start":1659537250083,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537250362,"exec_count":31,"id":"b41441","input":"fig = px.scatter(new_banknotes_dataset, x=\"Top\", y=\"Diagonal\", color= 'Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"9a3f192c7ef6741e0bda4f5bd1fc13c70b40ff39"}}},"pos":41,"start":1659537250309,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537250802,"exec_count":32,"id":"7a5fd1","input":"# Jayden\nimport sklearn\nfrom sklearn.model_selection import train_test_split\n\ntarget = new_banknotes_dataset[\"Counterfeit\"] # target\ninput_columns = new_banknotes_dataset.loc[:, new_banknotes_dataset.columns != \"Counterfeit\"]\n# defines the input columns\nx_train, x_test, y_train, y_test = train_test_split(input_columns, target, test_size=0.2)","kernel":"ds_env","no_halt":true,"pos":45,"start":1659537250371,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537250824,"exec_count":33,"id":"d65111","input":"# Dhruv","kernel":"ds_env","no_halt":true,"pos":47,"start":1659537250813,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537250849,"exec_count":34,"id":"dbf9a6","input":"from sklearn.linear_model import LogisticRegression\nlogisticRegr = LogisticRegression()","kernel":"ds_env","no_halt":true,"pos":48,"start":1659537250828,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537250873,"exec_count":35,"id":"8870c4","input":"logisticRegr.fit(x_train, y_train)\npredictions = logisticRegr.predict(x_test)","kernel":"ds_env","no_halt":true,"pos":49,"start":1659537250857,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537250884,"exec_count":36,"id":"9624a8","input":"y_cot=logisticRegr.predict(x_test)","kernel":"ds_env","no_halt":true,"pos":50,"start":1659537250882,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537250894,"exec_count":37,"id":"ab4109","input":"print(y_cot)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"[1 1 0 0 1 1 1 1 1 1 1 0 1 1 0 1 1 0 0 0 1 1 0 1 1 1 1 0 1 1 1 0 0 1 0 1 1\n 0 1 0]\n"}},"pos":51,"start":1659537250891,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537250913,"exec_count":38,"id":"fa1e6f","input":"# Train accuracy\nfrom sklearn import metrics\ny_train_pred = logisticRegr.predict(x_train) \nmetrics.accuracy_score(y_train, y_train_pred) \nlogisticRegr.score(x_train, y_train)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"1.0"},"exec_count":38}},"pos":52,"start":1659537250901,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537250943,"exec_count":39,"id":"cba5e8","input":"# Test accuracy\nnp.array(y_test)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"array([1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n       0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0])"},"exec_count":39}},"pos":53,"start":1659537250921,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537250955,"exec_count":40,"id":"8af04e","input":"# F1-Score","kernel":"ds_env","no_halt":true,"pos":54,"start":1659537250953,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537250962,"exec_count":41,"id":"aff2d5","input":"# Precision","kernel":"ds_env","no_halt":true,"pos":55,"start":1659537250958,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537250977,"exec_count":42,"id":"b5e245","input":"# Recallbfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import classification_report\nprint(classification_report(y_test, y_cot))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        14\n           1       1.00      1.00      1.00        26\n\n    accuracy                           1.00        40\n   macro avg       1.00      1.00      1.00        40\nweighted avg       1.00      1.00      1.00        40\n\n"}},"pos":56,"start":1659537250966,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537250992,"exec_count":43,"id":"76c177","input":"# Jayden","kernel":"ds_env","no_halt":true,"pos":58,"start":1659537250982,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537251015,"exec_count":44,"id":"6e3621","input":"new_banknotes_dataset.shape","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"(196, 8)"},"exec_count":44}},"pos":59,"start":1659537251001,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537251024,"exec_count":45,"id":"29cbc3","input":"x_train.shape","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"(156, 7)"},"exec_count":45}},"pos":60,"start":1659537251020,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537251031,"exec_count":46,"id":"a19d59","input":"import matplotlib.pyplot as plt\nfrom sklearn import svm\nfrom sklearn.linear_model import LinearRegression","kernel":"ds_env","no_halt":true,"pos":61,"start":1659537251027,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537251038,"exec_count":47,"id":"c760f1","input":"lr = LinearRegression()","kernel":"ds_env","no_halt":true,"pos":62,"start":1659537251034,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537251051,"exec_count":48,"id":"d7fc09","input":"lr.fit(x_train, y_train)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>","text/plain":"LinearRegression()"},"exec_count":48}},"pos":63,"start":1659537251041,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537251060,"exec_count":49,"id":"723bc0","input":"X = banknotes_dataset[\"Counterfeit\"].to_numpy()\nY = banknotes_dataset[\"Diagonal\"].to_numpy()","kernel":"ds_env","no_halt":true,"pos":64,"start":1659537251058,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537251078,"exec_count":50,"id":"af8bbe","input":"c_hat = lr.predict(x_test)","kernel":"ds_env","no_halt":true,"pos":65,"start":1659537251076,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537251090,"exec_count":51,"id":"3cdc5a","input":"x_length = list(x_test[\"Length\"])","kernel":"ds_env","no_halt":true,"pos":66,"start":1659537251081,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537251319,"exec_count":52,"id":"ead2e9","input":"plt.figure(figsize=(10,5))\nplt.plot(x_length, c_hat)\n\nplt.scatter(x_length, y_test, c='orange')\nplt.xlabel('x', fontsize = 20)\nplt.ylabel('y', fontsize = 20)\nplt.grid('on')\nplt.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"image/png":"087c384e1877ec41d76da69b5763d787f30e7e8c","text/plain":"<Figure size 720x360 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":67,"start":1659537251096,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537251357,"exec_count":53,"id":"274445","input":"from sklearn.tree import DecisionTreeClassifier\nclf_dt = DecisionTreeClassifier(max_depth =3, random_state = 42)\nclf_dt.fit(x_train, y_train)\n","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(max_depth=3, random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(max_depth=3, random_state=42)</pre></div></div></div></div></div>","text/plain":"DecisionTreeClassifier(max_depth=3, random_state=42)"},"exec_count":53}},"pos":69,"start":1659537251328,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537251605,"exec_count":54,"id":"a4932c","input":"from sklearn import tree\n\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(30,10))\n\na = tree.plot_tree(clf_dt,\n\n             feature_names = input_columns.columns,\n\n                   class_names = str(new_banknotes_dataset.Counterfeit.unique()) ,\n\n                   rounded = True,\n\n                   filled = True,\n\n                   fontsize=14)\n\nplt.show()\n","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"image/png":"82364dac04a1acd4029a3072cd4f188d8f2a9e34","text/plain":"<Figure size 2160x720 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":71,"start":1659537251360,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537251619,"exec_count":55,"id":"048ead","input":"#train score \nprint(clf_dt.score(x_train,y_train))\n#test score\nprint(clf_dt.score(x_test, y_test))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"1.0\n0.975\n"}},"pos":72,"start":1659537251613,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537251641,"exec_count":56,"id":"46e5ca","input":"new_banknotes_dataset","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Index</th>\n      <th>Counterfeit</th>\n      <th>Length</th>\n      <th>Left</th>\n      <th>Right</th>\n      <th>Bottom</th>\n      <th>Top</th>\n      <th>Diagonal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>0</td>\n      <td>214.8</td>\n      <td>131.0</td>\n      <td>131.1</td>\n      <td>9.0</td>\n      <td>9.7</td>\n      <td>141.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0</td>\n      <td>214.6</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.1</td>\n      <td>9.5</td>\n      <td>141.7</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.7</td>\n      <td>9.6</td>\n      <td>142.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.6</td>\n      <td>7.5</td>\n      <td>10.4</td>\n      <td>142.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0</td>\n      <td>215.7</td>\n      <td>130.8</td>\n      <td>130.5</td>\n      <td>9.0</td>\n      <td>10.1</td>\n      <td>141.4</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>191</th>\n      <td>195</td>\n      <td>1</td>\n      <td>215.0</td>\n      <td>130.4</td>\n      <td>130.3</td>\n      <td>9.9</td>\n      <td>12.1</td>\n      <td>139.6</td>\n    </tr>\n    <tr>\n      <th>192</th>\n      <td>196</td>\n      <td>1</td>\n      <td>215.1</td>\n      <td>130.3</td>\n      <td>129.9</td>\n      <td>10.3</td>\n      <td>11.5</td>\n      <td>139.7</td>\n    </tr>\n    <tr>\n      <th>193</th>\n      <td>197</td>\n      <td>1</td>\n      <td>214.8</td>\n      <td>130.3</td>\n      <td>130.4</td>\n      <td>10.6</td>\n      <td>11.1</td>\n      <td>140.0</td>\n    </tr>\n    <tr>\n      <th>194</th>\n      <td>198</td>\n      <td>1</td>\n      <td>214.7</td>\n      <td>130.7</td>\n      <td>130.8</td>\n      <td>11.2</td>\n      <td>11.2</td>\n      <td>139.4</td>\n    </tr>\n    <tr>\n      <th>195</th>\n      <td>199</td>\n      <td>1</td>\n      <td>214.3</td>\n      <td>129.9</td>\n      <td>129.9</td>\n      <td>10.2</td>\n      <td>11.5</td>\n      <td>139.6</td>\n    </tr>\n  </tbody>\n</table>\n<p>196 rows Ã— 8 columns</p>\n</div>","text/plain":"    Index  Counterfeit  Length   Left  Right  Bottom   Top  Diagonal\n0       0            0   214.8  131.0  131.1     9.0   9.7     141.0\n1       1            0   214.6  129.7  129.7     8.1   9.5     141.7\n2       2            0   214.8  129.7  129.7     8.7   9.6     142.2\n3       3            0   214.8  129.7  129.6     7.5  10.4     142.0\n4       5            0   215.7  130.8  130.5     9.0  10.1     141.4\n..    ...          ...     ...    ...    ...     ...   ...       ...\n191   195            1   215.0  130.4  130.3     9.9  12.1     139.6\n192   196            1   215.1  130.3  129.9    10.3  11.5     139.7\n193   197            1   214.8  130.3  130.4    10.6  11.1     140.0\n194   198            1   214.7  130.7  130.8    11.2  11.2     139.4\n195   199            1   214.3  129.9  129.9    10.2  11.5     139.6\n\n[196 rows x 8 columns]"},"exec_count":56}},"pos":73,"start":1659537251637,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537251650,"exec_count":57,"id":"25730d","input":"print(input_columns.columns)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"Index(['Index', 'Length', 'Left', 'Right', 'Bottom', 'Top', 'Diagonal'], dtype='object')\n"}},"pos":74,"start":1659537251647,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537251663,"exec_count":58,"id":"e919bd","input":"print (new_banknotes_dataset.Counterfeit.unique())","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"[0 1]\n"}},"pos":75,"start":1659537251659,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537251715,"exec_count":59,"id":"30afbc","input":" from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.datasets import make_classification","kernel":"ds_env","no_halt":true,"pos":77,"start":1659537251681,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537251871,"exec_count":60,"id":"036741","input":">>> rfc = RandomForestClassifier(max_depth=2, random_state=0)\n>>> rfc.fit(x_train, y_train)\n","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(max_depth=2, random_state=0)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(max_depth=2, random_state=0)</pre></div></div></div></div></div>","text/plain":"RandomForestClassifier(max_depth=2, random_state=0)"},"exec_count":60}},"pos":78,"start":1659537251725,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537251894,"exec_count":61,"id":"79a297","input":"rfc.score(x_test, y_test)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"1.0"},"exec_count":61}},"pos":79,"start":1659537251878,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537251936,"exec_count":62,"id":"c9ae43","input":"y_cat=rfc.predict(x_test)\n\nprint(y_cat)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"[1 1 0 0 1 1 1 1 1 1 1 0 1 1 0 1 1 0 0 0 1 1 0 1 1 1 1 0 1 1 1 0 0 1 0 1 1\n 0 1 0]\n"}},"pos":80,"start":1659537251919,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537251966,"exec_count":63,"id":"d90be6","input":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, y_cat))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        14\n           1       1.00      1.00      1.00        26\n\n    accuracy                           1.00        40\n   macro avg       1.00      1.00      1.00        40\nweighted avg       1.00      1.00      1.00        40\n\n"}},"pos":82,"start":1659537251956,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537252036,"exec_count":64,"id":"7f1312","input":"import sklearn\nfrom sklearn.neighbors import KNeighborsClassifier as KNN\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib.colors import ListedColormap\nfrom sklearn import neighbors, datasets\nfrom sklearn.inspection import DecisionBoundaryDisplay","kernel":"ds_env","no_halt":true,"pos":86,"start":1659537251976,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537252056,"exec_count":65,"id":"5191a2","input":"k=5\nmy_KNN_model = KNN(n_neighbors=k)","kernel":"ds_env","no_halt":true,"pos":87,"start":1659537252041,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537252076,"exec_count":66,"id":"8e9fd8","input":"my_KNN_model.fit(x_train, y_train)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div></div></div>","text/plain":"KNeighborsClassifier()"},"exec_count":66}},"pos":88,"start":1659537252061,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537252096,"exec_count":67,"id":"8b82e9","input":"p_hat = my_KNN_model.predict(x_test)","kernel":"ds_env","no_halt":true,"pos":89,"start":1659537252080,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537252106,"exec_count":68,"id":"2a25d4","input":"np.array(y_test)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"array([1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n       0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0])"},"exec_count":68}},"pos":90,"start":1659537252102,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537252117,"exec_count":69,"id":"58822f","input":"np.array(y_test)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"array([1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n       0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0])"},"exec_count":69}},"pos":91,"start":1659537252110,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537252127,"exec_count":70,"id":"2618bd","input":"total_squared_error = (np.sum((y_test - p_hat)**2))\nmean_squared_error = total_squared_error/len(y_test) \nprint(mean_squared_error)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"0.0\n"}},"pos":92,"start":1659537252120,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537252439,"exec_count":71,"id":"b37db6","input":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, p_hat), annot=True, fmt='g')","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":71},"1":{"data":{"image/png":"91d5e15d29ede6ccd222ae47253cd1185923cdfe","text/plain":"<Figure size 432x288 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":93,"scrolled":true,"start":1659537252147,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537252448,"exec_count":72,"id":"293e07","input":"from sklearn.datasets import make_hastie_10_2\nfrom sklearn.ensemble import GradientBoostingClassifier","kernel":"ds_env","no_halt":true,"pos":96,"start":1659537252446,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537252499,"exec_count":73,"id":"9d25d8","input":"MyGBC = GradientBoostingClassifier(n_estimators=100, learning_rate=1.0, max_depth=1, random_state=0).fit(x_train, y_train)","kernel":"ds_env","no_halt":true,"pos":98,"start":1659537252454,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537252968,"exec_count":75,"id":"ca27e1","input":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, y_hat))","kernel":"ds_env","no_halt":true,"output":{"0":{"ename":"NameError","evalue":"name 'y_hat' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [75]\u001b[0m, in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01msklearn\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mmetrics\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m classification_report\n\u001b[0;32m----> 2\u001b[0m \u001b[38;5;28mprint\u001b[39m(classification_report(y_test, \u001b[43my_hat\u001b[49m))\n","\u001b[0;31mNameError\u001b[0m: name 'y_hat' is not defined"]}},"pos":100,"start":1659537252518,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537255073,"exec_count":76,"id":"c35f41","input":"!pip install xgboost\nimport xgboost as xgb","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"Requirement already satisfied: xgboost in /projects/d5de4790-84b9-4555-9a80-ef455fafa128/.local/lib/python3.8/site-packages (1.6.1)\r\nRequirement already satisfied: numpy in /usr/local/lib/python3.8/dist-packages (from xgboost) (1.22.3)\r\nRequirement already satisfied: scipy in /usr/local/lib/python3.8/dist-packages (from xgboost) (1.8.0)\r\n"}},"pos":103,"start":1659537252974,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537255087,"exec_count":77,"id":"57e0f7","input":"from sklearn.tree import DecisionTreeClassifier","kernel":"ds_env","no_halt":true,"pos":104,"start":1659537255083,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537255097,"exec_count":78,"id":"394b82","input":"XGBModel = DecisionTreeClassifier().fit(x_train, y_train)","kernel":"ds_env","no_halt":true,"pos":105,"start":1659537255090,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537255109,"exec_count":79,"id":"2d8d95","input":"y_pot=XGBModel.predict(x_test)\ny_pot","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"array([1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n       0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1])"},"exec_count":79}},"pos":107,"start":1659537255101,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537255171,"exec_count":81,"id":"38847d","input":"XGBModel.score(x_test, y_test)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"0.975"},"exec_count":81}},"pos":108,"start":1659537255148,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537255189,"exec_count":82,"id":"e9c88e","input":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, y_pot))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       1.00      0.93      0.96        14\n           1       0.96      1.00      0.98        26\n\n    accuracy                           0.97        40\n   macro avg       0.98      0.96      0.97        40\nweighted avg       0.98      0.97      0.97        40\n\n"}},"pos":109,"start":1659537255185,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537300569,"exec_count":84,"id":"755676","input":"#train score \nprint(rfc.score(x_train,y_train))\n#test score\nprint(rfc.score(x_test, y_test))","kernel":"ds_env","output":{"0":{"name":"stdout","text":"1.0\n1.0\n"}},"pos":83,"start":1659537300495,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537352127,"exec_count":86,"id":"739236","input":"#train score \nprint(my_KNN_model.score(x_train,y_train))\n#test score\nprint(my_KNN_model.score(x_test, y_test))","kernel":"ds_env","output":{"0":{"name":"stdout","text":"0.9935897435897436\n1.0\n"}},"pos":94,"start":1659537352093,"state":"done","type":"cell"}
{"cell_type":"code","end":1659537406674,"exec_count":87,"id":"f34534","input":"#train score \nprint(MyGBC.score(x_train,y_train))\n#test score\nprint(MyGBC.score(x_test, y_test))","kernel":"ds_env","output":{"0":{"name":"stdout","text":"1.0\n1.0\n"}},"pos":99,"start":1659537406657,"state":"done","type":"cell"}
{"cell_type":"code","end":1659542023864,"exec_count":93,"id":"48abbb","input":"#plot 1\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Top', y='Bottom', z='Diagonal', color='Counterfeit')\nfig.update_layout(height = 400, width = 800)\nfig.show()\nfig.write_html(\"Website/startbootstrap-stylish-portfolio-gh-pages/diagonal_top_bottom.html\")","kernel":"ds_env","output":{"0":{"data":{"iframe":"252bbde999bf4165e1ad8716cccc6e381f6561d4"}}},"pos":21,"start":1659542023770,"state":"done","type":"cell"}
{"cell_type":"code","end":1659542360873,"exec_count":94,"id":"7e9c10","input":"fig = px.scatter(new_banknotes_dataset, x=\"Bottom\", y=\"Top\", color= 'Counterfeit')\nfig.update_layout(height = 400, width = 800)\nfig.show()\nfig.write_html(\"Website/startbootstrap-stylish-portfolio-gh-pages/top_bottom.html\")","kernel":"ds_env","output":{"0":{"data":{"iframe":"202774af465ce66b80c1509aaac86b25be6e20b9"}}},"pos":40,"start":1659542360666,"state":"done","type":"cell"}
{"cell_type":"code","end":1659542471942,"exec_count":95,"id":"740346","input":"fig = px.scatter(new_banknotes_dataset, x=\"Diagonal\", y=\"Bottom\", color= 'Counterfeit')\nfig.update_layout(height = 400, width = 800)\nfig.show()\nfig.write_html(\"Website/startbootstrap-stylish-portfolio-gh-pages/diagonal_bottom.html\")","kernel":"ds_env","output":{"0":{"data":{"iframe":"b691dfa7a7d6533d97d766a682fc63972a45974d"}}},"pos":42,"start":1659542471827,"state":"done","type":"cell"}
{"cell_type":"code","end":1659542579768,"exec_count":96,"id":"b9f57d","input":"#plot 6\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Left', y='Right', z='Bottom', color='Counterfeit')\nfig.update_layout(height = 400, width = 800)\nfig.show()\nfig.write_html(\"Website/startbootstrap-stylish-portfolio-gh-pages/bottom_left_right.html\")","kernel":"ds_env","output":{"0":{"data":{"iframe":"258bf8117091369e321231f9c8fbf5a5d6890316"}}},"pos":26,"start":1659542579660,"state":"done","type":"cell"}
{"cell_type":"code","end":1659542641851,"exec_count":97,"id":"40c3b3","input":"#plot 2\ndf = banknotes_dataset\nfig = px.scatter_3d(df, x='Right', y='Left', z='Diagonal', color='Counterfeit')\nfig.update_layout(height = 400, width = 800)\nfig.show()\nfig.write_html(\"Website/startbootstrap-stylish-portfolio-gh-pages/diagonal_left_right.html\")","kernel":"ds_env","output":{"0":{"data":{"iframe":"aa3acd27b330a13937a2f2b7d030163d54b1943b"}}},"pos":22,"start":1659542641679,"state":"done","type":"cell"}
{"cell_type":"code","end":1659542671673,"exec_count":98,"id":"5c0118","input":"fig = px.scatter(new_banknotes_dataset, x=\"Length\", y=\"Diagonal\", color='Counterfeit')\nfig.update_layout(height = 400, width = 800)\nfig.show()\nfig.write_html(\"Website/startbootstrap-stylish-portfolio-gh-pages/length_diagonal.html\")","kernel":"ds_env","output":{"0":{"data":{"iframe":"f3bbfcc8701402bb67e94b085ec2cf94a54d40d2"}}},"pos":36,"start":1659542671586,"state":"done","type":"cell"}
{"cell_type":"code","id":"0f6bcc","input":"","pos":17,"type":"cell"}
{"cell_type":"code","id":"358dfa","input":"","pos":81,"type":"cell"}
{"cell_type":"code","id":"42e4e7","input":"","pos":106,"type":"cell"}
{"cell_type":"code","id":"4f6cf7","input":"","pos":84,"type":"cell"}
{"cell_type":"code","id":"59500d","input":"","pos":10,"type":"cell"}
{"cell_type":"code","id":"638032","input":"","pos":70,"type":"cell"}
{"cell_type":"code","id":"63aedb","input":"","pos":2,"type":"cell"}
{"cell_type":"code","id":"852cad","input":"","pos":102,"type":"cell"}
{"cell_type":"code","id":"b072df","input":"","pos":34,"type":"cell"}
{"cell_type":"code","id":"c9699e","input":"","pos":12,"type":"cell"}
{"cell_type":"code","id":"cccddd","input":"    ","pos":110,"type":"cell"}
{"cell_type":"code","id":"e79101","input":"","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"003b49","input":"# Exploratory Data Analysis\n\n","pos":18,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"130e68","input":"### Jayden - SVC\n\n","pos":57,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"253e0d","input":"### Dhruv - Logistic Regression\n\n","pos":46,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"32e0db","input":"### Dhrupadh - Boosting","pos":95,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"38866a","input":"## Dhrupadh \\- XGBoosting\n\n","pos":101,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"3db677","input":"# Perform Preprocessing of Data\n\n","pos":6,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"5b2bf4","input":"### Holly - Random Forest\n\n","pos":76,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"61b81d","input":"# 2D Plot Data & Analysis:\n\nMatthew:\n\n","pos":33,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"629f21","input":"# Import Libraries","pos":1,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"8d2bb0","input":"Apply Split -> Fit -> Predict -> Evaluate for all machine learning models.\n\n","pos":44,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"cb794f","input":"# From 3D Plots & Further Analysis:\n\nDhrupadh: \n\nSo what we can see from the plots are the correlation between many of these 3D groups and where the counterfeit outputs tend to be distinct from the \"real\" values. We can see the clear difference in the plots and it really helps to visualize what correlation each column of the data set has with other columns and how it will affect the outcome of how it is counterfeit or not. In some plots we can see a very clear difference between the two different banknotes. In other plots, there are aspects that we can notice about the different banknote types that may not exactly show a complete split between the two but that one seems to span across the whole plot while the other value will end up sticking towards the bottom. The plots also help us notice a lot of outliers and see the nature of our data visually.\n","pos":19,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"cfbd9a","input":"### Matthew - KNN","pos":85,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"d240e2","input":"# Machine Learning","pos":43,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"d3fe39","input":"### Nolawi - Decision Tree\n\n","pos":68,"state":"done","type":"cell"}
{"end":1659537255131,"exec_count":80,"id":"daa677","input":"XGBModel.score(x_train, y_train)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"1.0"},"exec_count":80}},"pos":107.5,"start":1659537255126,"state":"done","type":"cell"}
{"end":1659552848469,"exec_count":102,"id":"6a660e","input":"fig = px.imshow(confusion_matrix(y_test, p_hat), text_auto=True)\nfig.show()\nfig.write_html(\"Website/startbootstrap-stylish-portfolio-gh-pages/KNNconfusion_matrix.html\")","kernel":"ds_env","output":{"0":{"data":{"iframe":"cd9e6b518b9419ae26d3f3351586046072f71be8"}}},"pos":93.5,"start":1659552848342,"state":"done","type":"cell"}
{"id":0,"time":1659552853732,"type":"user"}
{"last_load":1659536771646,"type":"file"}