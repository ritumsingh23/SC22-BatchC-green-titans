{"backend_state":"init","connection_file":"/projects/d5de4790-84b9-4555-9a80-ef455fafa128/.local/share/jupyter/runtime/kernel-0dabf969-9aed-4f84-b631-ad3368f26d97.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"0f6bcc","input":"","pos":17,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"271d64","input":"","pos":97,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"358dfa","input":"","pos":81,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"42e4e7","input":"","pos":106,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"4f6cf7","input":"","pos":84,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"59500d","input":"","pos":10,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"638032","input":"","pos":70,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"63aedb","input":"","pos":2,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"739236","input":"","pos":94,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"740346","input":"","pos":42,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"755676","input":"","pos":83,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"852cad","input":"","pos":102,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"b072df","input":"","pos":34,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"c9699e","input":"","pos":12,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"cccddd","input":"    ","pos":110,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"e79101","input":"","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"ead2e9","input":"plt.figure(figsize=(10,5))\nplt.plot(x_length, c_hat)\n\nplt.scatter(x_length, y_test, c='orange')\nplt.xlabel('x', fontsize = 20)\nplt.ylabel('y', fontsize = 20)\nplt.grid('on')\nplt.show()","pos":67,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"8ac3ec","input":"import pandas as pd\nimport numpy as np\nimport plotly.express as px\n","pos":3,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"736b1a","input":"banknotes_dataset.drop_duplicates(inplace=True)","pos":15,"type":"cell"}
{"cell_type":"code","exec_count":105,"id":"e9c88e","input":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, y_pot))","output":{"0":{"name":"stdout","output_type":"stream","text":"              precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        17\n           1       1.00      1.00      1.00        23\n\n    accuracy                           1.00        40\n   macro avg       1.00      1.00      1.00        40\nweighted avg       1.00      1.00      1.00        40\n\n"}},"pos":109,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"476463","input":"banknotes_dataset","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Counterfeit</th>\n      <th>Length</th>\n      <th>Left</th>\n      <th>Right</th>\n      <th>Bottom</th>\n      <th>Top</th>\n      <th>Diagonal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>131.0</td>\n      <td>131.1</td>\n      <td>9.0</td>\n      <td>9.7</td>\n      <td>141.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>214.6</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.1</td>\n      <td>9.5</td>\n      <td>141.7</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.7</td>\n      <td>9.6</td>\n      <td>142.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.6</td>\n      <td>7.5</td>\n      <td>10.4</td>\n      <td>142.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>215.0</td>\n      <td>129.6</td>\n      <td>129.7</td>\n      <td>10.4</td>\n      <td>7.7</td>\n      <td>141.8</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>195</th>\n      <td>1</td>\n      <td>215.0</td>\n      <td>130.4</td>\n      <td>130.3</td>\n      <td>9.9</td>\n      <td>12.1</td>\n      <td>139.6</td>\n    </tr>\n    <tr>\n      <th>196</th>\n      <td>1</td>\n      <td>215.1</td>\n      <td>130.3</td>\n      <td>129.9</td>\n      <td>10.3</td>\n      <td>11.5</td>\n      <td>139.7</td>\n    </tr>\n    <tr>\n      <th>197</th>\n      <td>1</td>\n      <td>214.8</td>\n      <td>130.3</td>\n      <td>130.4</td>\n      <td>10.6</td>\n      <td>11.1</td>\n      <td>140.0</td>\n    </tr>\n    <tr>\n      <th>198</th>\n      <td>1</td>\n      <td>214.7</td>\n      <td>130.7</td>\n      <td>130.8</td>\n      <td>11.2</td>\n      <td>11.2</td>\n      <td>139.4</td>\n    </tr>\n    <tr>\n      <th>199</th>\n      <td>1</td>\n      <td>214.3</td>\n      <td>129.9</td>\n      <td>129.9</td>\n      <td>10.2</td>\n      <td>11.5</td>\n      <td>139.6</td>\n    </tr>\n  </tbody>\n</table>\n<p>200 rows Ã— 7 columns</p>\n</div>","text/plain":"     Counterfeit  Length   Left  Right  Bottom   Top  Diagonal\n0              0   214.8  131.0  131.1     9.0   9.7     141.0\n1              0   214.6  129.7  129.7     8.1   9.5     141.7\n2              0   214.8  129.7  129.7     8.7   9.6     142.2\n3              0   214.8  129.7  129.6     7.5  10.4     142.0\n4              0   215.0  129.6  129.7    10.4   7.7     141.8\n..           ...     ...    ...    ...     ...   ...       ...\n195            1   215.0  130.4  130.3     9.9  12.1     139.6\n196            1   215.1  130.3  129.9    10.3  11.5     139.7\n197            1   214.8  130.3  130.4    10.6  11.1     140.0\n198            1   214.7  130.7  130.8    11.2  11.2     139.4\n199            1   214.3  129.9  129.9    10.2  11.5     139.6\n\n[200 rows x 7 columns]"},"exec_count":11,"output_type":"execute_result"}},"pos":16,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"80815f","input":"# Dhrupadh","pos":20,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"48abbb","input":"#plot 1\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Top', y='Bottom', z='Diagonal', color='Counterfeit')\nfig.show()","output":{"0":{"data":{"iframe":"68acede0a8bd2f51424cd14dafb1c9f7c4a0b580"},"exec_count":13,"output_type":"execute_result"}},"pos":21,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"40c3b3","input":"#plot 2\ndf = banknotes_dataset\nfig = px.scatter_3d(df, x='Right', y='Left', z='Diagonal', color='Counterfeit')\nfig.show()","output":{"0":{"data":{"iframe":"90f34687dfb0b404db636862b7063661405efe4c"},"exec_count":14,"output_type":"execute_result"}},"pos":22,"type":"cell"}
{"cell_type":"code","exec_count":15,"id":"36c03b","input":"#plot 3\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Top', y='Bottom', z='Left', color='Counterfeit')\nfig.show()","output":{"0":{"data":{"iframe":"a798c479007eefd153623e11af7a638ad7ffab15"},"exec_count":15,"output_type":"execute_result"}},"pos":23,"type":"cell"}
{"cell_type":"code","exec_count":153,"id":"723bc0","input":"X = banknotes_dataset[\"Counterfeit\"].to_numpy()\nY = banknotes_dataset[\"Diagonal\"].to_numpy()","pos":64,"type":"cell"}
{"cell_type":"code","exec_count":154,"id":"af8bbe","input":"c_hat = lr.predict(x_test)","pos":65,"type":"cell"}
{"cell_type":"code","exec_count":155,"id":"3cdc5a","input":"x_length = list(x_test[\"Length\"])","pos":66,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"82f5cc","input":"#plot 4\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Top', y='Bottom', z='Right', color='Counterfeit')\nfig.show()","output":{"0":{"data":{"iframe":"d7365435de9ab13dcfcf809e6ba64ee0238121e8"},"exec_count":16,"output_type":"execute_result"}},"pos":24,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"aabc35","input":"#plot 5\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Left', y='Right', z='Top', color='Counterfeit')\nfig.show()","output":{"0":{"data":{"iframe":"a664fb56b77d57f312c4019ef62f8aa056b2be12"},"exec_count":17,"output_type":"execute_result"}},"pos":25,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"b9f57d","input":"#plot 6\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Left', y='Right', z='Bottom', color='Counterfeit')\nfig.show()","output":{"0":{"data":{"iframe":"fa1ceea4cc1b230a3c869153e535c5c2a910a457"},"exec_count":18,"output_type":"execute_result"}},"pos":26,"type":"cell"}
{"cell_type":"code","exec_count":19,"id":"ac033e","input":"#plot 7\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Length', y='Diagonal', z='Top', color='Counterfeit')\nfig.show()","output":{"0":{"data":{"iframe":"d3864d70fe8ed7962b2d6fdbe6ff1c50b641bbf1"},"exec_count":19,"output_type":"execute_result"}},"pos":27,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"d23109","input":"banknotes_dataset = pd.read_csv(\"banknotes.csv\")","pos":4,"type":"cell"}
{"cell_type":"code","exec_count":20,"id":"52f772","input":"#plot 8\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Length', y='Diagonal', z='Bottom', color='Counterfeit')\nfig.show()","output":{"0":{"data":{"iframe":"2394fa223bfd237953421fa0880fd62ee95b392b"},"exec_count":20,"output_type":"execute_result"}},"pos":28,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"567e86","input":"#plot 9\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Length', y='Diagonal', z='Left', color='Counterfeit')\nfig.show()","output":{"0":{"data":{"iframe":"6d762ca57384dd3e190d14a72db57dc3dcf7b516"},"exec_count":21,"output_type":"execute_result"}},"pos":29,"type":"cell"}
{"cell_type":"code","exec_count":22,"id":"c090db","input":"#plot 10\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Length', y='Diagonal', z='Right', color='Counterfeit')\nfig.show()","output":{"0":{"data":{"iframe":"623e05dc9cf4d06a5b55fdff0def49bccc0c8a5c"},"exec_count":22,"output_type":"execute_result"}},"pos":30,"type":"cell"}
{"cell_type":"code","exec_count":23,"id":"b5bbd3","input":"#plot 11\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Left', y='Right', z='Length', color='Counterfeit')\nfig.show()","output":{"0":{"data":{"iframe":"b1a7ca917eee66ba98970156170291629afb3e27"},"exec_count":23,"output_type":"execute_result"}},"pos":31,"type":"cell"}
{"cell_type":"code","exec_count":24,"id":"81ac18","input":"#plot 12\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Top', y='Bottom', z='Length', color='Counterfeit')\nfig.show()","output":{"0":{"data":{"iframe":"7a9711f78588cea8c841a88d4120a84468404c6d"},"exec_count":24,"output_type":"execute_result"}},"pos":32,"type":"cell"}
{"cell_type":"code","exec_count":25,"id":"1015cb","input":"fig = px.scatter(new_banknotes_dataset, x=\"Bottom\", y=\"Length\", color= 'Counterfeit')\nfig.show()","output":{"0":{"data":{"iframe":"e9bc4643a02a83a45f18fdf9447262f4d3f78537"},"exec_count":25,"output_type":"execute_result"}},"pos":35,"type":"cell"}
{"cell_type":"code","exec_count":26,"id":"5c0118","input":"fig = px.scatter(new_banknotes_dataset, x=\"Length\", y=\"Diagonal\", color='Counterfeit')\nfig.show()","output":{"0":{"data":{"iframe":"12c6da00bb6d08f72c3e455fecc0e40154b91f43"},"exec_count":26,"output_type":"execute_result"}},"pos":36,"type":"cell"}
{"cell_type":"code","exec_count":27,"id":"85ecf5","input":"fig = px.scatter(new_banknotes_dataset, x=\"Right\", y=\"Left\", color= 'Counterfeit')\nfig.show()","output":{"0":{"data":{"iframe":"93c41e543be8e5a1db7fd0ec5a67713876a4a97f"},"exec_count":27,"output_type":"execute_result"}},"pos":37,"type":"cell"}
{"cell_type":"code","exec_count":28,"id":"e85d9c","input":"df = new_banknotes_dataset[\"Left\"].hist()\n","output":{"0":{"data":{"image/png":"bf6da964ab23a1a216e98ad2c64ca5ef9f95fe1c","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":28,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":38,"type":"cell"}
{"cell_type":"code","exec_count":29,"id":"bd75de","input":"df = new_banknotes_dataset[\"Right\"].hist()","output":{"0":{"data":{"image/png":"ad3234fc9a47e724a7f2a33b8a5e377df777ef79","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":29,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":39,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"0b6848","input":"banknotes_dataset.rename(index=str, columns={'conterfeit': 'Counterfeit'}, inplace=True) ","pos":5,"type":"cell"}
{"cell_type":"code","exec_count":30,"id":"7e9c10","input":"fig = px.scatter(new_banknotes_dataset, x=\"Bottom\", y=\"Top\", color= 'Counterfeit')\nfig.show()","output":{"0":{"data":{"iframe":"8dc78b80323989266345473b85293f0d34267f52"},"exec_count":30,"output_type":"execute_result"}},"pos":40,"type":"cell"}
{"cell_type":"code","exec_count":31,"id":"b41441","input":"fig = px.scatter(new_banknotes_dataset, x=\"Top\", y=\"Diagonal\", color= 'Counterfeit')\nfig.show()","output":{"0":{"data":{"iframe":"b60a0f85145c6571458eb204c00c19652fcb63c9"},"exec_count":31,"output_type":"execute_result"}},"pos":41,"type":"cell"}
{"cell_type":"code","exec_count":32,"id":"7a5fd1","input":"# Jayden\nimport sklearn\nfrom sklearn.model_selection import train_test_split\n\ntarget = new_banknotes_dataset[\"Counterfeit\"] # target\ninput_columns = new_banknotes_dataset.loc[:, new_banknotes_dataset.columns != \"Counterfeit\"]\n# defines the input columns\nx_train, x_test, y_train, y_test = train_test_split(input_columns, target, test_size=0.2)","pos":45,"type":"cell"}
{"cell_type":"code","exec_count":33,"id":"d65111","input":"# Dhruv","pos":47,"type":"cell"}
{"cell_type":"code","exec_count":34,"id":"dbf9a6","input":"from sklearn.linear_model import LogisticRegression\nlogisticRegr = LogisticRegression()","pos":48,"type":"cell"}
{"cell_type":"code","exec_count":35,"id":"8870c4","input":"logisticRegr.fit(x_train, y_train)\npredictions = logisticRegr.predict(x_test)","pos":49,"type":"cell"}
{"cell_type":"code","exec_count":36,"id":"9624a8","input":"y_cot=logisticRegr.predict(x_test)","pos":50,"type":"cell"}
{"cell_type":"code","exec_count":37,"id":"ab4109","input":"print(y_cot)","output":{"0":{"name":"stdout","output_type":"stream","text":"[1 1 1 0 1 1 0 1 0 1 0 0 0 0 1 0 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 1 0 1 1 0 1\n 1 1 1]\n"}},"pos":51,"type":"cell"}
{"cell_type":"code","exec_count":38,"id":"fa1e6f","input":"# Train accuracy\nfrom sklearn import metrics\ny_train_pred = logisticRegr.predict(x_train) \nmetrics.accuracy_score(y_train, y_train_pred) \nlogisticRegr.score(x_train, y_train)","output":{"0":{"data":{"text/plain":"1.0"},"exec_count":38,"output_type":"execute_result"}},"pos":52,"type":"cell"}
{"cell_type":"code","exec_count":39,"id":"cba5e8","input":"# Test accuracy\nnp.array(y_test)","output":{"0":{"data":{"text/plain":"array([1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0,\n       1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1])"},"exec_count":39,"output_type":"execute_result"}},"pos":53,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"f20913","input":"new_df = []\n# Step 1: loop over each row in the dataset\nfor row in banknotes_dataset.itertuples():\n    temp_list = []\n    if row[6] == 11.2 and row[5] == 8 and row[7] == 139.6 and row[1] == 0:\n        print('first_outlier!')\n    elif row[4] == 130.2 and row[3] == 130.2 and row[7] ==139.6:\n        print('outlier2')   \n    elif row[6] == 11.7 and row[5] == 7.9 and row[3] ==130.4:\n        print('outlier3')\n    elif row[6] ==11.1 and row[5] == 9 and row[3] ==130.7:\n        print('outlier4')\n    elif row[3] ==129.6 and row[4] ==129.7 and row[5]== 10.4:\n        print('outlier5')\n    elif row[2] ==214.9 and row[7] ==139.6 and row[6] ==11.2:\n        print('outlier6')\n    else:\n        temp_list.append(list(row))\n        new_df.append(temp_list[0])\n\nnew_banknotes_dataset = pd.DataFrame(new_df, columns = [\"Index\", 'Counterfeit', 'Length', 'Left', 'Right', 'Bottom', 'Top', 'Diagonal'])\nnew_banknotes_dataset.drop('Index', axis = 1)\n","output":{"0":{"name":"stdout","output_type":"stream","text":"outlier5\noutlier3\nfirst_outlier!\noutlier4\n"},"1":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Counterfeit</th>\n      <th>Length</th>\n      <th>Left</th>\n      <th>Right</th>\n      <th>Bottom</th>\n      <th>Top</th>\n      <th>Diagonal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>131.0</td>\n      <td>131.1</td>\n      <td>9.0</td>\n      <td>9.7</td>\n      <td>141.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>214.6</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.1</td>\n      <td>9.5</td>\n      <td>141.7</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.7</td>\n      <td>9.6</td>\n      <td>142.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.6</td>\n      <td>7.5</td>\n      <td>10.4</td>\n      <td>142.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>215.7</td>\n      <td>130.8</td>\n      <td>130.5</td>\n      <td>9.0</td>\n      <td>10.1</td>\n      <td>141.4</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>191</th>\n      <td>1</td>\n      <td>215.0</td>\n      <td>130.4</td>\n      <td>130.3</td>\n      <td>9.9</td>\n      <td>12.1</td>\n      <td>139.6</td>\n    </tr>\n    <tr>\n      <th>192</th>\n      <td>1</td>\n      <td>215.1</td>\n      <td>130.3</td>\n      <td>129.9</td>\n      <td>10.3</td>\n      <td>11.5</td>\n      <td>139.7</td>\n    </tr>\n    <tr>\n      <th>193</th>\n      <td>1</td>\n      <td>214.8</td>\n      <td>130.3</td>\n      <td>130.4</td>\n      <td>10.6</td>\n      <td>11.1</td>\n      <td>140.0</td>\n    </tr>\n    <tr>\n      <th>194</th>\n      <td>1</td>\n      <td>214.7</td>\n      <td>130.7</td>\n      <td>130.8</td>\n      <td>11.2</td>\n      <td>11.2</td>\n      <td>139.4</td>\n    </tr>\n    <tr>\n      <th>195</th>\n      <td>1</td>\n      <td>214.3</td>\n      <td>129.9</td>\n      <td>129.9</td>\n      <td>10.2</td>\n      <td>11.5</td>\n      <td>139.6</td>\n    </tr>\n  </tbody>\n</table>\n<p>196 rows Ã— 7 columns</p>\n</div>","text/plain":"     Counterfeit  Length   Left  Right  Bottom   Top  Diagonal\n0              0   214.8  131.0  131.1     9.0   9.7     141.0\n1              0   214.6  129.7  129.7     8.1   9.5     141.7\n2              0   214.8  129.7  129.7     8.7   9.6     142.2\n3              0   214.8  129.7  129.6     7.5  10.4     142.0\n4              0   215.7  130.8  130.5     9.0  10.1     141.4\n..           ...     ...    ...    ...     ...   ...       ...\n191            1   215.0  130.4  130.3     9.9  12.1     139.6\n192            1   215.1  130.3  129.9    10.3  11.5     139.7\n193            1   214.8  130.3  130.4    10.6  11.1     140.0\n194            1   214.7  130.7  130.8    11.2  11.2     139.4\n195            1   214.3  129.9  129.9    10.2  11.5     139.6\n\n[196 rows x 7 columns]"},"exec_count":4,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":40,"id":"8af04e","input":"# F1-Score","pos":54,"type":"cell"}
{"cell_type":"code","exec_count":41,"id":"aff2d5","input":"# Precision","pos":55,"type":"cell"}
{"cell_type":"code","exec_count":42,"id":"b5e245","input":"# Recallbfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import classification_report\nprint(classification_report(y_test, y_cot))","output":{"0":{"name":"stdout","output_type":"stream","text":"              precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        17\n           1       1.00      1.00      1.00        23\n\n    accuracy                           1.00        40\n   macro avg       1.00      1.00      1.00        40\nweighted avg       1.00      1.00      1.00        40\n\n"}},"pos":56,"type":"cell"}
{"cell_type":"code","exec_count":43,"id":"76c177","input":"# Jayden","pos":58,"type":"cell"}
{"cell_type":"code","exec_count":44,"id":"6e3621","input":"new_banknotes_dataset.shape","output":{"0":{"data":{"text/plain":"(196, 8)"},"exec_count":44,"output_type":"execute_result"}},"pos":59,"type":"cell"}
{"cell_type":"code","exec_count":45,"id":"29cbc3","input":"x_train.shape","output":{"0":{"data":{"text/plain":"(156, 7)"},"exec_count":45,"output_type":"execute_result"}},"pos":60,"type":"cell"}
{"cell_type":"code","exec_count":46,"id":"a19d59","input":"import matplotlib.pyplot as plt\nfrom sklearn import svm\nfrom sklearn.linear_model import LinearRegression","pos":61,"type":"cell"}
{"cell_type":"code","exec_count":49,"id":"274445","input":"from sklearn.tree import DecisionTreeClassifier\nclf_dt = DecisionTreeClassifier(max_depth =3, random_state = 42)\nclf_dt.fit(x_train, y_train)\n","output":{"0":{"data":{"text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(max_depth=3, random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(max_depth=3, random_state=42)</pre></div></div></div></div></div>","text/plain":"DecisionTreeClassifier(max_depth=3, random_state=42)"},"exec_count":49,"output_type":"execute_result"}},"pos":69,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"f2c2b4","input":"new_banknotes_dataset.shape","output":{"0":{"data":{"text/plain":"(196, 8)"},"exec_count":5,"output_type":"execute_result"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":50,"id":"a4932c","input":"from sklearn import tree\n\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(30,10))\n\na = tree.plot_tree(clf_dt,\n\n             feature_names = input_columns.columns,\n\n                   class_names = str(new_banknotes_dataset.Counterfeit.unique()) ,\n\n                   rounded = True,\n\n                   filled = True,\n\n                   fontsize=14)\n\nplt.show()\n","output":{"0":{"data":{"image/png":"519f92a2c908afac2439f7882ca1a4fe68ec06c3","text/plain":"<Figure size 2160x720 with 1 Axes>"},"exec_count":50,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":71,"type":"cell"}
{"cell_type":"code","exec_count":51,"id":"048ead","input":"#train score \nclf_dt.score(x_test, y_test)\nclf_dt.score(x_train,y_train)\n#test score","output":{"0":{"data":{"text/plain":"1.0"},"exec_count":51,"output_type":"execute_result"}},"pos":72,"type":"cell"}
{"cell_type":"code","exec_count":52,"id":"46e5ca","input":"new_banknotes_dataset","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Index</th>\n      <th>Counterfeit</th>\n      <th>Length</th>\n      <th>Left</th>\n      <th>Right</th>\n      <th>Bottom</th>\n      <th>Top</th>\n      <th>Diagonal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>0</td>\n      <td>214.8</td>\n      <td>131.0</td>\n      <td>131.1</td>\n      <td>9.0</td>\n      <td>9.7</td>\n      <td>141.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0</td>\n      <td>214.6</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.1</td>\n      <td>9.5</td>\n      <td>141.7</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.7</td>\n      <td>9.6</td>\n      <td>142.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.6</td>\n      <td>7.5</td>\n      <td>10.4</td>\n      <td>142.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0</td>\n      <td>215.7</td>\n      <td>130.8</td>\n      <td>130.5</td>\n      <td>9.0</td>\n      <td>10.1</td>\n      <td>141.4</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>191</th>\n      <td>195</td>\n      <td>1</td>\n      <td>215.0</td>\n      <td>130.4</td>\n      <td>130.3</td>\n      <td>9.9</td>\n      <td>12.1</td>\n      <td>139.6</td>\n    </tr>\n    <tr>\n      <th>192</th>\n      <td>196</td>\n      <td>1</td>\n      <td>215.1</td>\n      <td>130.3</td>\n      <td>129.9</td>\n      <td>10.3</td>\n      <td>11.5</td>\n      <td>139.7</td>\n    </tr>\n    <tr>\n      <th>193</th>\n      <td>197</td>\n      <td>1</td>\n      <td>214.8</td>\n      <td>130.3</td>\n      <td>130.4</td>\n      <td>10.6</td>\n      <td>11.1</td>\n      <td>140.0</td>\n    </tr>\n    <tr>\n      <th>194</th>\n      <td>198</td>\n      <td>1</td>\n      <td>214.7</td>\n      <td>130.7</td>\n      <td>130.8</td>\n      <td>11.2</td>\n      <td>11.2</td>\n      <td>139.4</td>\n    </tr>\n    <tr>\n      <th>195</th>\n      <td>199</td>\n      <td>1</td>\n      <td>214.3</td>\n      <td>129.9</td>\n      <td>129.9</td>\n      <td>10.2</td>\n      <td>11.5</td>\n      <td>139.6</td>\n    </tr>\n  </tbody>\n</table>\n<p>196 rows Ã— 8 columns</p>\n</div>","text/plain":"    Index  Counterfeit  Length   Left  Right  Bottom   Top  Diagonal\n0       0            0   214.8  131.0  131.1     9.0   9.7     141.0\n1       1            0   214.6  129.7  129.7     8.1   9.5     141.7\n2       2            0   214.8  129.7  129.7     8.7   9.6     142.2\n3       3            0   214.8  129.7  129.6     7.5  10.4     142.0\n4       5            0   215.7  130.8  130.5     9.0  10.1     141.4\n..    ...          ...     ...    ...    ...     ...   ...       ...\n191   195            1   215.0  130.4  130.3     9.9  12.1     139.6\n192   196            1   215.1  130.3  129.9    10.3  11.5     139.7\n193   197            1   214.8  130.3  130.4    10.6  11.1     140.0\n194   198            1   214.7  130.7  130.8    11.2  11.2     139.4\n195   199            1   214.3  129.9  129.9    10.2  11.5     139.6\n\n[196 rows x 8 columns]"},"exec_count":52,"output_type":"execute_result"}},"pos":73,"type":"cell"}
{"cell_type":"code","exec_count":53,"id":"25730d","input":"print(input_columns.columns)","output":{"0":{"name":"stdout","output_type":"stream","text":"Index(['Index', 'Length', 'Left', 'Right', 'Bottom', 'Top', 'Diagonal'], dtype='object')\n"}},"pos":74,"type":"cell"}
{"cell_type":"code","exec_count":54,"id":"e919bd","input":"print (new_banknotes_dataset.Counterfeit.unique())","output":{"0":{"name":"stdout","output_type":"stream","text":"[0 1]\n"}},"pos":75,"type":"cell"}
{"cell_type":"code","exec_count":55,"id":"7f1312","input":"import sklearn\nfrom sklearn.neighbors import KNeighborsClassifier as KNN\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib.colors import ListedColormap\nfrom sklearn import neighbors, datasets\nfrom sklearn.inspection import DecisionBoundaryDisplay","pos":86,"type":"cell"}
{"cell_type":"code","exec_count":56,"id":"5191a2","input":"k=5\nmy_KNN_model = KNN(n_neighbors=k)","pos":87,"type":"cell"}
{"cell_type":"code","exec_count":57,"id":"8e9fd8","input":"my_KNN_model.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div></div></div>","text/plain":"KNeighborsClassifier()"},"exec_count":57,"output_type":"execute_result"}},"pos":88,"type":"cell"}
{"cell_type":"code","exec_count":58,"id":"8b82e9","input":"p_hat = my_KNN_model.predict(x_test)","pos":89,"type":"cell"}
{"cell_type":"code","exec_count":59,"id":"2a25d4","input":"np.array(y_test)","output":{"0":{"data":{"text/plain":"array([1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0,\n       1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1])"},"exec_count":59,"output_type":"execute_result"}},"pos":90,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"2a790b","input":"# Step 2: ","pos":9,"type":"cell"}
{"cell_type":"code","exec_count":60,"id":"58822f","input":"np.array(y_test)","output":{"0":{"data":{"text/plain":"array([1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0,\n       1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1])"},"exec_count":60,"output_type":"execute_result"}},"pos":91,"type":"cell"}
{"cell_type":"code","exec_count":63,"id":"293e07","input":"from sklearn.datasets import make_hastie_10_2\nfrom sklearn.ensemble import GradientBoostingClassifier","pos":96,"type":"cell"}
{"cell_type":"code","exec_count":64,"id":"9d25d8","input":"MyGBC = GradientBoostingClassifier(n_estimators=100, learning_rate=1.0, max_depth=1, random_state=0).fit(x_train, y_train)","pos":98,"type":"cell"}
{"cell_type":"code","exec_count":65,"id":"f34534","input":"MyGBC.score(x_test, y_test)\n","output":{"0":{"data":{"text/plain":"1.0"},"exec_count":65,"output_type":"execute_result"}},"pos":99,"type":"cell"}
{"cell_type":"code","exec_count":66,"id":"ca27e1","input":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, y_hat))","output":{"0":{"ename":"NameError","evalue":"name 'y_hat' is not defined","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [66]\u001b[0m, in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01msklearn\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mmetrics\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m classification_report\n\u001b[0;32m----> 2\u001b[0m \u001b[38;5;28mprint\u001b[39m(classification_report(y_test, \u001b[43my_hat\u001b[49m))\n","\u001b[0;31mNameError\u001b[0m: name 'y_hat' is not defined"]}},"pos":100,"type":"cell"}
{"cell_type":"code","exec_count":68,"id":"c35f41","input":"!pip install xgboost\nimport xgboost as xgb","output":{"0":{"name":"stdout","output_type":"stream","text":"Requirement already satisfied: xgboost in /projects/d5de4790-84b9-4555-9a80-ef455fafa128/.local/lib/python3.8/site-packages (1.6.1)\r\nRequirement already satisfied: scipy in /usr/local/lib/python3.8/dist-packages (from xgboost) (1.8.0)\r\nRequirement already satisfied: numpy in /usr/local/lib/python3.8/dist-packages (from xgboost) (1.22.3)\r\n"}},"pos":103,"type":"cell"}
{"cell_type":"code","exec_count":69,"id":"57e0f7","input":"from sklearn.tree import DecisionTreeClassifier","pos":104,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"4767e6","input":"banknotes_dataset.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Counterfeit</th>\n      <th>Length</th>\n      <th>Left</th>\n      <th>Right</th>\n      <th>Bottom</th>\n      <th>Top</th>\n      <th>Diagonal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>131.0</td>\n      <td>131.1</td>\n      <td>9.0</td>\n      <td>9.7</td>\n      <td>141.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>214.6</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.1</td>\n      <td>9.5</td>\n      <td>141.7</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.7</td>\n      <td>9.6</td>\n      <td>142.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.6</td>\n      <td>7.5</td>\n      <td>10.4</td>\n      <td>142.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>215.0</td>\n      <td>129.6</td>\n      <td>129.7</td>\n      <td>10.4</td>\n      <td>7.7</td>\n      <td>141.8</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   Counterfeit  Length   Left  Right  Bottom   Top  Diagonal\n0            0   214.8  131.0  131.1     9.0   9.7     141.0\n1            0   214.6  129.7  129.7     8.1   9.5     141.7\n2            0   214.8  129.7  129.7     8.7   9.6     142.2\n3            0   214.8  129.7  129.6     7.5  10.4     142.0\n4            0   215.0  129.6  129.7    10.4   7.7     141.8"},"exec_count":7,"output_type":"execute_result"}},"pos":11,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":70,"id":"394b82","input":"XGBModel = DecisionTreeClassifier().fit(x_train, y_train)","pos":105,"type":"cell"}
{"cell_type":"code","exec_count":71,"id":"2d8d95","input":"y_pot=XGBModel.predict(x_test)\ny_pot","output":{"0":{"data":{"text/plain":"array([1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0,\n       1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1])"},"exec_count":71,"output_type":"execute_result"}},"pos":107,"type":"cell"}
{"cell_type":"code","exec_count":72,"id":"38847d","input":"XGBModel.score(x_test, y_test)","output":{"0":{"data":{"text/plain":"1.0"},"exec_count":72,"output_type":"execute_result"}},"pos":108,"type":"cell"}
{"cell_type":"code","exec_count":76,"id":"2618bd","input":"total_squared_error = (np.sum((y_test - p_hat)**2))\nmean_squared_error = total_squared_error/len(y_test) \nprint(mean_squared_error)","output":{"0":{"name":"stdout","output_type":"stream","text":"0.0\n"}},"pos":92,"type":"cell"}
{"cell_type":"code","exec_count":77,"id":"b37db6","input":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, p_hat), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":77,"output_type":"execute_result"},"1":{"data":{"image/png":"7e9858104236777a1d8e1f8bc249c5c9880401e8","text/plain":"<Figure size 432x288 with 2 Axes>"},"exec_count":77,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":93,"type":"cell"}
{"cell_type":"code","exec_count":78,"id":"30afbc","input":" from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.datasets import make_classification","pos":77,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"7ae2f4","input":"# Nolawi","pos":13,"type":"cell"}
{"cell_type":"code","exec_count":83,"id":"036741","input":">>> rfc = RandomForestClassifier(max_depth=2, random_state=0)\n>>> rfc.fit(x_train, y_train)\n","output":{"0":{"data":{"text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(max_depth=2, random_state=0)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(max_depth=2, random_state=0)</pre></div></div></div></div></div>","text/plain":"RandomForestClassifier(max_depth=2, random_state=0)"},"exec_count":83,"output_type":"execute_result"}},"pos":78,"type":"cell"}
{"cell_type":"code","exec_count":84,"id":"79a297","input":"rfc.score(x_test, y_test)","output":{"0":{"data":{"text/plain":"1.0"},"exec_count":84,"output_type":"execute_result"}},"pos":79,"type":"cell"}
{"cell_type":"code","exec_count":85,"id":"c760f1","input":"lr = LinearRegression()","pos":62,"type":"cell"}
{"cell_type":"code","exec_count":86,"id":"d7fc09","input":"lr.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>","text/plain":"LinearRegression()"},"exec_count":86,"output_type":"execute_result"}},"pos":63,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"a02ab4","input":"banknotes_dataset.tail()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Counterfeit</th>\n      <th>Length</th>\n      <th>Left</th>\n      <th>Right</th>\n      <th>Bottom</th>\n      <th>Top</th>\n      <th>Diagonal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>195</th>\n      <td>1</td>\n      <td>215.0</td>\n      <td>130.4</td>\n      <td>130.3</td>\n      <td>9.9</td>\n      <td>12.1</td>\n      <td>139.6</td>\n    </tr>\n    <tr>\n      <th>196</th>\n      <td>1</td>\n      <td>215.1</td>\n      <td>130.3</td>\n      <td>129.9</td>\n      <td>10.3</td>\n      <td>11.5</td>\n      <td>139.7</td>\n    </tr>\n    <tr>\n      <th>197</th>\n      <td>1</td>\n      <td>214.8</td>\n      <td>130.3</td>\n      <td>130.4</td>\n      <td>10.6</td>\n      <td>11.1</td>\n      <td>140.0</td>\n    </tr>\n    <tr>\n      <th>198</th>\n      <td>1</td>\n      <td>214.7</td>\n      <td>130.7</td>\n      <td>130.8</td>\n      <td>11.2</td>\n      <td>11.2</td>\n      <td>139.4</td>\n    </tr>\n    <tr>\n      <th>199</th>\n      <td>1</td>\n      <td>214.3</td>\n      <td>129.9</td>\n      <td>129.9</td>\n      <td>10.2</td>\n      <td>11.5</td>\n      <td>139.6</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"     Counterfeit  Length   Left  Right  Bottom   Top  Diagonal\n195            1   215.0  130.4  130.3     9.9  12.1     139.6\n196            1   215.1  130.3  129.9    10.3  11.5     139.7\n197            1   214.8  130.3  130.4    10.6  11.1     140.0\n198            1   214.7  130.7  130.8    11.2  11.2     139.4\n199            1   214.3  129.9  129.9    10.2  11.5     139.6"},"exec_count":9,"output_type":"execute_result"}},"pos":14,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":95,"id":"c9ae43","input":"y_cat=rfc.predict(x_test)\n\nprint(y_cat)","output":{"0":{"name":"stdout","output_type":"stream","text":"[1 1 1 0 1 1 0 1 0 1 0 0 0 0 1 0 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 1 0 1 1 0 1\n 1 1 1]\n"}},"pos":80,"type":"cell"}
{"cell_type":"code","exec_count":97,"id":"d90be6","input":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, y_cat))","output":{"0":{"name":"stdout","output_type":"stream","text":"              precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        17\n           1       1.00      1.00      1.00        23\n\n    accuracy                           1.00        40\n   macro avg       1.00      1.00      1.00        40\nweighted avg       1.00      1.00      1.00        40\n\n"}},"pos":82,"type":"cell"}
{"cell_type":"markdown","id":"003b49","input":"# Exploratory Data Analysis\n\n","pos":18,"type":"cell"}
{"cell_type":"markdown","id":"130e68","input":"### Jayden - SVC\n\n","pos":57,"type":"cell"}
{"cell_type":"markdown","id":"253e0d","input":"### Dhruv - Logistic Regression\n\n","pos":46,"type":"cell"}
{"cell_type":"markdown","id":"32e0db","input":"### Dhrupadh - Boosting","pos":95,"type":"cell"}
{"cell_type":"markdown","id":"38866a","input":"## Dhrupadh \\- XGBoosting\n\n","pos":101,"type":"cell"}
{"cell_type":"markdown","id":"3db677","input":"# Perform Preprocessing of Data\n\n","pos":6,"type":"cell"}
{"cell_type":"markdown","id":"5b2bf4","input":"### Holly - Random Forest\n\n","pos":76,"type":"cell"}
{"cell_type":"markdown","id":"61b81d","input":"# 2D Plot Data & Analysis:\n\nMatthew:\n\n","pos":33,"type":"cell"}
{"cell_type":"markdown","id":"629f21","input":"# Import Libraries","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"8d2bb0","input":"Apply Split -> Fit -> Predict -> Evaluate for all machine learning models.\n\n","pos":44,"type":"cell"}
{"cell_type":"markdown","id":"cb794f","input":"# From 3D Plots & Further Analysis:\n\nDhrupadh: \n\nSo what we can see from the plots are the correlation between many of these 3D groups and where the counterfeit outputs tend to be distinct from the \"real\" values. We can see the clear difference in the plots and it really helps to visualize what correlation each column of the data set has with other columns and how it will affect the outcome of how it is counterfeit or not. In some plots we can see a very clear difference between the two different banknotes. In other plots, there are aspects that we can notice about the different banknote types that may not exactly show a complete split between the two but that one seems to span across the whole plot while the other value will end up sticking towards the bottom. The plots also help us notice a lot of outliers and see the nature of our data visually.\n","pos":19,"type":"cell"}
{"cell_type":"markdown","id":"cfbd9a","input":"### Matthew - KNN","pos":85,"type":"cell"}
{"cell_type":"markdown","id":"d240e2","input":"# Machine Learning","pos":43,"type":"cell"}
{"cell_type":"markdown","id":"d3fe39","input":"### Nolawi - Decision Tree\n\n","pos":68,"type":"cell"}
{"id":0,"time":1659378551763,"type":"user"}
{"last_load":1659373494983,"type":"file"}