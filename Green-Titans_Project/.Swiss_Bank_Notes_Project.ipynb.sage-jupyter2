{"backend_state":"running","connection_file":"/projects/d5de4790-84b9-4555-9a80-ef455fafa128/.local/share/jupyter/runtime/kernel-826401c6-95cc-4fac-a49b-9d65b6527f35.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1659464292202,"exec_count":1,"id":"8ac3ec","input":"import pandas as pd\nimport numpy as np\nimport plotly.express as px\n","kernel":"ds_env","no_halt":true,"pos":3,"start":1659464291328,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464292231,"exec_count":2,"id":"d23109","input":"banknotes_dataset = pd.read_csv(\"banknotes.csv\")","kernel":"ds_env","no_halt":true,"pos":4,"start":1659464292218,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464292246,"exec_count":3,"id":"0b6848","input":"banknotes_dataset.rename(index=str, columns={'conterfeit': 'Counterfeit'}, inplace=True) ","kernel":"ds_env","no_halt":true,"pos":5,"start":1659464292235,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464292293,"exec_count":4,"id":"f20913","input":"new_df = []\n# Step 1: loop over each row in the dataset\nfor row in banknotes_dataset.itertuples():\n    temp_list = []\n    if row[6] == 11.2 and row[5] == 8 and row[7] == 139.6 and row[1] == 0:\n        print('first_outlier!')\n    elif row[4] == 130.2 and row[3] == 130.2 and row[7] ==139.6:\n        print('outlier2')   \n    elif row[6] == 11.7 and row[5] == 7.9 and row[3] ==130.4:\n        print('outlier3')\n    elif row[6] ==11.1 and row[5] == 9 and row[3] ==130.7:\n        print('outlier4')\n    elif row[3] ==129.6 and row[4] ==129.7 and row[5]== 10.4:\n        print('outlier5')\n    elif row[2] ==214.9 and row[7] ==139.6 and row[6] ==11.2:\n        print('outlier6')\n    else:\n        temp_list.append(list(row))\n        new_df.append(temp_list[0])\n\nnew_banknotes_dataset = pd.DataFrame(new_df, columns = [\"Index\", 'Counterfeit', 'Length', 'Left', 'Right', 'Bottom', 'Top', 'Diagonal'])\nnew_banknotes_dataset.drop('Index', axis = 1)\n","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"outlier5\noutlier3\nfirst_outlier!\noutlier4\n"},"1":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Counterfeit</th>\n      <th>Length</th>\n      <th>Left</th>\n      <th>Right</th>\n      <th>Bottom</th>\n      <th>Top</th>\n      <th>Diagonal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>131.0</td>\n      <td>131.1</td>\n      <td>9.0</td>\n      <td>9.7</td>\n      <td>141.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>214.6</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.1</td>\n      <td>9.5</td>\n      <td>141.7</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.7</td>\n      <td>9.6</td>\n      <td>142.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.6</td>\n      <td>7.5</td>\n      <td>10.4</td>\n      <td>142.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>215.7</td>\n      <td>130.8</td>\n      <td>130.5</td>\n      <td>9.0</td>\n      <td>10.1</td>\n      <td>141.4</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>191</th>\n      <td>1</td>\n      <td>215.0</td>\n      <td>130.4</td>\n      <td>130.3</td>\n      <td>9.9</td>\n      <td>12.1</td>\n      <td>139.6</td>\n    </tr>\n    <tr>\n      <th>192</th>\n      <td>1</td>\n      <td>215.1</td>\n      <td>130.3</td>\n      <td>129.9</td>\n      <td>10.3</td>\n      <td>11.5</td>\n      <td>139.7</td>\n    </tr>\n    <tr>\n      <th>193</th>\n      <td>1</td>\n      <td>214.8</td>\n      <td>130.3</td>\n      <td>130.4</td>\n      <td>10.6</td>\n      <td>11.1</td>\n      <td>140.0</td>\n    </tr>\n    <tr>\n      <th>194</th>\n      <td>1</td>\n      <td>214.7</td>\n      <td>130.7</td>\n      <td>130.8</td>\n      <td>11.2</td>\n      <td>11.2</td>\n      <td>139.4</td>\n    </tr>\n    <tr>\n      <th>195</th>\n      <td>1</td>\n      <td>214.3</td>\n      <td>129.9</td>\n      <td>129.9</td>\n      <td>10.2</td>\n      <td>11.5</td>\n      <td>139.6</td>\n    </tr>\n  </tbody>\n</table>\n<p>196 rows Ã— 7 columns</p>\n</div>","text/plain":"     Counterfeit  Length   Left  Right  Bottom   Top  Diagonal\n0              0   214.8  131.0  131.1     9.0   9.7     141.0\n1              0   214.6  129.7  129.7     8.1   9.5     141.7\n2              0   214.8  129.7  129.7     8.7   9.6     142.2\n3              0   214.8  129.7  129.6     7.5  10.4     142.0\n4              0   215.7  130.8  130.5     9.0  10.1     141.4\n..           ...     ...    ...    ...     ...   ...       ...\n191            1   215.0  130.4  130.3     9.9  12.1     139.6\n192            1   215.1  130.3  129.9    10.3  11.5     139.7\n193            1   214.8  130.3  130.4    10.6  11.1     140.0\n194            1   214.7  130.7  130.8    11.2  11.2     139.4\n195            1   214.3  129.9  129.9    10.2  11.5     139.6\n\n[196 rows x 7 columns]"},"exec_count":4}},"pos":7,"start":1659464292251,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464292306,"exec_count":5,"id":"f2c2b4","input":"new_banknotes_dataset.shape","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"(196, 8)"},"exec_count":5}},"pos":8,"start":1659464292301,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464292317,"exec_count":6,"id":"2a790b","input":"# Step 2: ","kernel":"ds_env","no_halt":true,"pos":9,"start":1659464292314,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464292354,"exec_count":7,"id":"4767e6","input":"banknotes_dataset.head()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Counterfeit</th>\n      <th>Length</th>\n      <th>Left</th>\n      <th>Right</th>\n      <th>Bottom</th>\n      <th>Top</th>\n      <th>Diagonal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>131.0</td>\n      <td>131.1</td>\n      <td>9.0</td>\n      <td>9.7</td>\n      <td>141.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>214.6</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.1</td>\n      <td>9.5</td>\n      <td>141.7</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.7</td>\n      <td>9.6</td>\n      <td>142.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.6</td>\n      <td>7.5</td>\n      <td>10.4</td>\n      <td>142.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>215.0</td>\n      <td>129.6</td>\n      <td>129.7</td>\n      <td>10.4</td>\n      <td>7.7</td>\n      <td>141.8</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   Counterfeit  Length   Left  Right  Bottom   Top  Diagonal\n0            0   214.8  131.0  131.1     9.0   9.7     141.0\n1            0   214.6  129.7  129.7     8.1   9.5     141.7\n2            0   214.8  129.7  129.7     8.7   9.6     142.2\n3            0   214.8  129.7  129.6     7.5  10.4     142.0\n4            0   215.0  129.6  129.7    10.4   7.7     141.8"},"exec_count":7}},"pos":11,"scrolled":true,"start":1659464292343,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464292366,"exec_count":8,"id":"7ae2f4","input":"# Nolawi","kernel":"ds_env","no_halt":true,"pos":13,"start":1659464292364,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464292396,"exec_count":9,"id":"a02ab4","input":"banknotes_dataset.tail()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Counterfeit</th>\n      <th>Length</th>\n      <th>Left</th>\n      <th>Right</th>\n      <th>Bottom</th>\n      <th>Top</th>\n      <th>Diagonal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>195</th>\n      <td>1</td>\n      <td>215.0</td>\n      <td>130.4</td>\n      <td>130.3</td>\n      <td>9.9</td>\n      <td>12.1</td>\n      <td>139.6</td>\n    </tr>\n    <tr>\n      <th>196</th>\n      <td>1</td>\n      <td>215.1</td>\n      <td>130.3</td>\n      <td>129.9</td>\n      <td>10.3</td>\n      <td>11.5</td>\n      <td>139.7</td>\n    </tr>\n    <tr>\n      <th>197</th>\n      <td>1</td>\n      <td>214.8</td>\n      <td>130.3</td>\n      <td>130.4</td>\n      <td>10.6</td>\n      <td>11.1</td>\n      <td>140.0</td>\n    </tr>\n    <tr>\n      <th>198</th>\n      <td>1</td>\n      <td>214.7</td>\n      <td>130.7</td>\n      <td>130.8</td>\n      <td>11.2</td>\n      <td>11.2</td>\n      <td>139.4</td>\n    </tr>\n    <tr>\n      <th>199</th>\n      <td>1</td>\n      <td>214.3</td>\n      <td>129.9</td>\n      <td>129.9</td>\n      <td>10.2</td>\n      <td>11.5</td>\n      <td>139.6</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"     Counterfeit  Length   Left  Right  Bottom   Top  Diagonal\n195            1   215.0  130.4  130.3     9.9  12.1     139.6\n196            1   215.1  130.3  129.9    10.3  11.5     139.7\n197            1   214.8  130.3  130.4    10.6  11.1     140.0\n198            1   214.7  130.7  130.8    11.2  11.2     139.4\n199            1   214.3  129.9  129.9    10.2  11.5     139.6"},"exec_count":9}},"pos":14,"scrolled":true,"start":1659464292384,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464292409,"exec_count":10,"id":"736b1a","input":"banknotes_dataset.drop_duplicates(inplace=True)","kernel":"ds_env","no_halt":true,"pos":15,"start":1659464292400,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464292433,"exec_count":11,"id":"476463","input":"banknotes_dataset","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Counterfeit</th>\n      <th>Length</th>\n      <th>Left</th>\n      <th>Right</th>\n      <th>Bottom</th>\n      <th>Top</th>\n      <th>Diagonal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>131.0</td>\n      <td>131.1</td>\n      <td>9.0</td>\n      <td>9.7</td>\n      <td>141.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>214.6</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.1</td>\n      <td>9.5</td>\n      <td>141.7</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.7</td>\n      <td>9.6</td>\n      <td>142.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.6</td>\n      <td>7.5</td>\n      <td>10.4</td>\n      <td>142.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>215.0</td>\n      <td>129.6</td>\n      <td>129.7</td>\n      <td>10.4</td>\n      <td>7.7</td>\n      <td>141.8</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>195</th>\n      <td>1</td>\n      <td>215.0</td>\n      <td>130.4</td>\n      <td>130.3</td>\n      <td>9.9</td>\n      <td>12.1</td>\n      <td>139.6</td>\n    </tr>\n    <tr>\n      <th>196</th>\n      <td>1</td>\n      <td>215.1</td>\n      <td>130.3</td>\n      <td>129.9</td>\n      <td>10.3</td>\n      <td>11.5</td>\n      <td>139.7</td>\n    </tr>\n    <tr>\n      <th>197</th>\n      <td>1</td>\n      <td>214.8</td>\n      <td>130.3</td>\n      <td>130.4</td>\n      <td>10.6</td>\n      <td>11.1</td>\n      <td>140.0</td>\n    </tr>\n    <tr>\n      <th>198</th>\n      <td>1</td>\n      <td>214.7</td>\n      <td>130.7</td>\n      <td>130.8</td>\n      <td>11.2</td>\n      <td>11.2</td>\n      <td>139.4</td>\n    </tr>\n    <tr>\n      <th>199</th>\n      <td>1</td>\n      <td>214.3</td>\n      <td>129.9</td>\n      <td>129.9</td>\n      <td>10.2</td>\n      <td>11.5</td>\n      <td>139.6</td>\n    </tr>\n  </tbody>\n</table>\n<p>200 rows Ã— 7 columns</p>\n</div>","text/plain":"     Counterfeit  Length   Left  Right  Bottom   Top  Diagonal\n0              0   214.8  131.0  131.1     9.0   9.7     141.0\n1              0   214.6  129.7  129.7     8.1   9.5     141.7\n2              0   214.8  129.7  129.7     8.7   9.6     142.2\n3              0   214.8  129.7  129.6     7.5  10.4     142.0\n4              0   215.0  129.6  129.7    10.4   7.7     141.8\n..           ...     ...    ...    ...     ...   ...       ...\n195            1   215.0  130.4  130.3     9.9  12.1     139.6\n196            1   215.1  130.3  129.9    10.3  11.5     139.7\n197            1   214.8  130.3  130.4    10.6  11.1     140.0\n198            1   214.7  130.7  130.8    11.2  11.2     139.4\n199            1   214.3  129.9  129.9    10.2  11.5     139.6\n\n[200 rows x 7 columns]"},"exec_count":11}},"pos":16,"start":1659464292413,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464292445,"exec_count":12,"id":"80815f","input":"# Dhrupadh","kernel":"ds_env","no_halt":true,"pos":20,"start":1659464292442,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464294160,"exec_count":13,"id":"48abbb","input":"#plot 1\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Top', y='Bottom', z='Diagonal', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"6cc10aaed3911dea2bf01378d3cade53a347f233"}}},"pos":21,"start":1659464292449,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464294242,"exec_count":14,"id":"40c3b3","input":"#plot 2\ndf = banknotes_dataset\nfig = px.scatter_3d(df, x='Right', y='Left', z='Diagonal', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"6e4aacf6b031eade38ed568c06e4df469f007244"}}},"pos":22,"start":1659464294167,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464294344,"exec_count":15,"id":"36c03b","input":"#plot 3\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Top', y='Bottom', z='Left', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"68f0d4e14384186f194fa612fc889807cb7c4a72"}}},"pos":23,"start":1659464294265,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464294421,"exec_count":16,"id":"82f5cc","input":"#plot 4\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Top', y='Bottom', z='Right', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"fd3a7789c509f0f6646b0bc35b2c91983216218a"}}},"pos":24,"start":1659464294352,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464294511,"exec_count":17,"id":"aabc35","input":"#plot 5\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Left', y='Right', z='Top', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"4d7997deb574d9bd0f80a9c7f428d31c07d6dae8"}}},"pos":25,"start":1659464294426,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464294595,"exec_count":18,"id":"b9f57d","input":"#plot 6\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Left', y='Right', z='Bottom', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"09eb5a534bcf34590a6545e7edde961b57df3901"}}},"pos":26,"start":1659464294516,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464294693,"exec_count":19,"id":"ac033e","input":"#plot 7\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Length', y='Diagonal', z='Top', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"b1ca8c5dbd13216f5677cf110e305795ed58e329"}}},"pos":27,"start":1659464294603,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464294764,"exec_count":20,"id":"52f772","input":"#plot 8\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Length', y='Diagonal', z='Bottom', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"16f73e3bca1102b736eec7b625caa13753a19978"}}},"pos":28,"start":1659464294702,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464294850,"exec_count":21,"id":"567e86","input":"#plot 9\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Length', y='Diagonal', z='Left', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"d45e6789b4fafdbda5e609c5f55cd86dbb8dc8e6"}}},"pos":29,"start":1659464294778,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464294928,"exec_count":22,"id":"c090db","input":"#plot 10\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Length', y='Diagonal', z='Right', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"14e549164f3625ffed6933951852e5b5a5ebbb29"}}},"pos":30,"start":1659464294878,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464295009,"exec_count":23,"id":"b5bbd3","input":"#plot 11\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Left', y='Right', z='Length', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"7895a3d24d73c009f4b06871292f3e8d5ba958fa"}}},"pos":31,"start":1659464294939,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464295094,"exec_count":24,"id":"81ac18","input":"#plot 12\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Top', y='Bottom', z='Length', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"464961f4441bf42a64fdae1562e0d84ba9c05f35"}}},"pos":32,"start":1659464295013,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464295195,"exec_count":25,"id":"1015cb","input":"fig = px.scatter(new_banknotes_dataset, x=\"Bottom\", y=\"Length\", color= 'Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"9bbaea9c563312585b81238cf94f67522157b442"}}},"pos":35,"start":1659464295105,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464295300,"exec_count":26,"id":"5c0118","input":"fig = px.scatter(new_banknotes_dataset, x=\"Length\", y=\"Diagonal\", color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"5a917da4c45236be1d7d556f31310e417bbda80b"}}},"pos":36,"start":1659464295202,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464295379,"exec_count":27,"id":"85ecf5","input":"fig = px.scatter(new_banknotes_dataset, x=\"Right\", y=\"Left\", color= 'Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"623821608f5f61ceba8b0d1f90bd88b98fd4584f"}}},"pos":37,"start":1659464295321,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464296621,"exec_count":28,"id":"e85d9c","input":"df = new_banknotes_dataset[\"Left\"].hist()\n","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"image/png":"bf6da964ab23a1a216e98ad2c64ca5ef9f95fe1c","text/plain":"<Figure size 432x288 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":38,"start":1659464295385,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464296786,"exec_count":29,"id":"bd75de","input":"df = new_banknotes_dataset[\"Right\"].hist()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"image/png":"ad3234fc9a47e724a7f2a33b8a5e377df777ef79","text/plain":"<Figure size 432x288 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":39,"scrolled":true,"start":1659464296640,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464296877,"exec_count":30,"id":"7e9c10","input":"fig = px.scatter(new_banknotes_dataset, x=\"Bottom\", y=\"Top\", color= 'Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"f44b367aacf0e190e3de1a7803350b103c1ae811"}}},"pos":40,"start":1659464296804,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464296947,"exec_count":31,"id":"b41441","input":"fig = px.scatter(new_banknotes_dataset, x=\"Top\", y=\"Diagonal\", color= 'Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"a6bd76c0bae105655500af7d15b0460e98acf161"}}},"pos":41,"start":1659464296886,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464299621,"exec_count":33,"id":"7a5fd1","input":"# Jayden\nimport sklearn\nfrom sklearn.model_selection import train_test_split\n\ntarget = new_banknotes_dataset[\"Counterfeit\"] # target\ninput_columns = new_banknotes_dataset.loc[:, new_banknotes_dataset.columns != \"Counterfeit\"]\n# defines the input columns\nx_train, x_test, y_train, y_test = train_test_split(input_columns, target, test_size=0.2)","kernel":"ds_env","no_halt":true,"pos":45,"start":1659464298384,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464299649,"exec_count":34,"id":"d65111","input":"# Dhruv","kernel":"ds_env","no_halt":true,"pos":47,"start":1659464299638,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464299758,"exec_count":35,"id":"dbf9a6","input":"from sklearn.linear_model import LogisticRegression\nlogisticRegr = LogisticRegression()","kernel":"ds_env","no_halt":true,"pos":48,"start":1659464299653,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464299797,"exec_count":36,"id":"8870c4","input":"logisticRegr.fit(x_train, y_train)\npredictions = logisticRegr.predict(x_test)","kernel":"ds_env","no_halt":true,"pos":49,"start":1659464299775,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464299824,"exec_count":37,"id":"9624a8","input":"y_cot=logisticRegr.predict(x_test)","kernel":"ds_env","no_halt":true,"pos":50,"start":1659464299806,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464299843,"exec_count":38,"id":"ab4109","input":"print(y_cot)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"[0 1 0 0 1 1 1 1 0 0 1 1 1 1 0 0 0 1 1 0 1 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 1\n 1 1 0]\n"}},"pos":51,"start":1659464299839,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464299863,"exec_count":39,"id":"fa1e6f","input":"# Train accuracy\nfrom sklearn import metrics\ny_train_pred = logisticRegr.predict(x_train) \nmetrics.accuracy_score(y_train, y_train_pred) \nlogisticRegr.score(x_train, y_train)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"1.0"},"exec_count":39}},"pos":52,"start":1659464299851,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464299883,"exec_count":40,"id":"cba5e8","input":"# Test accuracy\nnp.array(y_test)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"array([0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0,\n       0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0])"},"exec_count":40}},"pos":53,"start":1659464299870,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464299903,"exec_count":41,"id":"8af04e","input":"# F1-Score","kernel":"ds_env","no_halt":true,"pos":54,"start":1659464299898,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464299924,"exec_count":42,"id":"aff2d5","input":"# Precision","kernel":"ds_env","no_halt":true,"pos":55,"start":1659464299910,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464299947,"exec_count":43,"id":"b5e245","input":"# Recallbfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import classification_report\nprint(classification_report(y_test, y_cot))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        17\n           1       1.00      1.00      1.00        23\n\n    accuracy                           1.00        40\n   macro avg       1.00      1.00      1.00        40\nweighted avg       1.00      1.00      1.00        40\n\n"}},"pos":56,"start":1659464299935,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464299957,"exec_count":44,"id":"76c177","input":"# Jayden","kernel":"ds_env","no_halt":true,"pos":58,"start":1659464299956,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464299970,"exec_count":45,"id":"6e3621","input":"new_banknotes_dataset.shape","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"(196, 8)"},"exec_count":45}},"pos":59,"start":1659464299965,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464299982,"exec_count":46,"id":"29cbc3","input":"x_train.shape","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"(156, 7)"},"exec_count":46}},"pos":60,"start":1659464299977,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464299997,"exec_count":47,"id":"a19d59","input":"import matplotlib.pyplot as plt\nfrom sklearn import svm\nfrom sklearn.linear_model import LinearRegression","kernel":"ds_env","no_halt":true,"pos":61,"start":1659464299993,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464300011,"exec_count":48,"id":"c760f1","input":"lr = LinearRegression()","kernel":"ds_env","no_halt":true,"pos":62,"start":1659464300008,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464300103,"exec_count":49,"id":"d7fc09","input":"lr.fit(x_train, y_train)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>","text/plain":"LinearRegression()"},"exec_count":49}},"pos":63,"start":1659464300019,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464300115,"exec_count":50,"id":"723bc0","input":"X = banknotes_dataset[\"Counterfeit\"].to_numpy()\nY = banknotes_dataset[\"Diagonal\"].to_numpy()","kernel":"ds_env","no_halt":true,"pos":64,"start":1659464300110,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464300129,"exec_count":51,"id":"af8bbe","input":"c_hat = lr.predict(x_test)","kernel":"ds_env","no_halt":true,"pos":65,"start":1659464300124,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464300140,"exec_count":52,"id":"3cdc5a","input":"x_length = list(x_test[\"Length\"])","kernel":"ds_env","no_halt":true,"pos":66,"start":1659464300137,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464300363,"exec_count":53,"id":"ead2e9","input":"plt.figure(figsize=(10,5))\nplt.plot(x_length, c_hat)\n\nplt.scatter(x_length, y_test, c='orange')\nplt.xlabel('x', fontsize = 20)\nplt.ylabel('y', fontsize = 20)\nplt.grid('on')\nplt.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"image/png":"08adbeab64e9c1ce2f0a9ee7d3616f3ab3cc69ce","text/plain":"<Figure size 720x360 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":67,"start":1659464300165,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464300489,"exec_count":54,"id":"274445","input":"from sklearn.tree import DecisionTreeClassifier\nclf_dt = DecisionTreeClassifier(max_depth =3, random_state = 42)\nclf_dt.fit(x_train, y_train)\n","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(max_depth=3, random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(max_depth=3, random_state=42)</pre></div></div></div></div></div>","text/plain":"DecisionTreeClassifier(max_depth=3, random_state=42)"},"exec_count":54}},"pos":69,"start":1659464300371,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464300900,"exec_count":55,"id":"a4932c","input":"from sklearn import tree\n\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(30,10))\n\na = tree.plot_tree(clf_dt,\n\n             feature_names = input_columns.columns,\n\n                   class_names = str(new_banknotes_dataset.Counterfeit.unique()) ,\n\n                   rounded = True,\n\n                   filled = True,\n\n                   fontsize=14)\n\nplt.show()\n","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"image/png":"ec742b058767698f4a5592940d2188c5a5abbd21","text/plain":"<Figure size 2160x720 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":71,"start":1659464300506,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464300926,"exec_count":56,"id":"048ead","input":"#train score \nclf_dt.score(x_test, y_test)\nclf_dt.score(x_train,y_train)\n#test score","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"1.0"},"exec_count":56}},"pos":72,"start":1659464300918,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464301291,"exec_count":57,"id":"46e5ca","input":"new_banknotes_dataset","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Index</th>\n      <th>Counterfeit</th>\n      <th>Length</th>\n      <th>Left</th>\n      <th>Right</th>\n      <th>Bottom</th>\n      <th>Top</th>\n      <th>Diagonal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>0</td>\n      <td>214.8</td>\n      <td>131.0</td>\n      <td>131.1</td>\n      <td>9.0</td>\n      <td>9.7</td>\n      <td>141.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0</td>\n      <td>214.6</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.1</td>\n      <td>9.5</td>\n      <td>141.7</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.7</td>\n      <td>9.6</td>\n      <td>142.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.6</td>\n      <td>7.5</td>\n      <td>10.4</td>\n      <td>142.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0</td>\n      <td>215.7</td>\n      <td>130.8</td>\n      <td>130.5</td>\n      <td>9.0</td>\n      <td>10.1</td>\n      <td>141.4</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>191</th>\n      <td>195</td>\n      <td>1</td>\n      <td>215.0</td>\n      <td>130.4</td>\n      <td>130.3</td>\n      <td>9.9</td>\n      <td>12.1</td>\n      <td>139.6</td>\n    </tr>\n    <tr>\n      <th>192</th>\n      <td>196</td>\n      <td>1</td>\n      <td>215.1</td>\n      <td>130.3</td>\n      <td>129.9</td>\n      <td>10.3</td>\n      <td>11.5</td>\n      <td>139.7</td>\n    </tr>\n    <tr>\n      <th>193</th>\n      <td>197</td>\n      <td>1</td>\n      <td>214.8</td>\n      <td>130.3</td>\n      <td>130.4</td>\n      <td>10.6</td>\n      <td>11.1</td>\n      <td>140.0</td>\n    </tr>\n    <tr>\n      <th>194</th>\n      <td>198</td>\n      <td>1</td>\n      <td>214.7</td>\n      <td>130.7</td>\n      <td>130.8</td>\n      <td>11.2</td>\n      <td>11.2</td>\n      <td>139.4</td>\n    </tr>\n    <tr>\n      <th>195</th>\n      <td>199</td>\n      <td>1</td>\n      <td>214.3</td>\n      <td>129.9</td>\n      <td>129.9</td>\n      <td>10.2</td>\n      <td>11.5</td>\n      <td>139.6</td>\n    </tr>\n  </tbody>\n</table>\n<p>196 rows Ã— 8 columns</p>\n</div>","text/plain":"    Index  Counterfeit  Length   Left  Right  Bottom   Top  Diagonal\n0       0            0   214.8  131.0  131.1     9.0   9.7     141.0\n1       1            0   214.6  129.7  129.7     8.1   9.5     141.7\n2       2            0   214.8  129.7  129.7     8.7   9.6     142.2\n3       3            0   214.8  129.7  129.6     7.5  10.4     142.0\n4       5            0   215.7  130.8  130.5     9.0  10.1     141.4\n..    ...          ...     ...    ...    ...     ...   ...       ...\n191   195            1   215.0  130.4  130.3     9.9  12.1     139.6\n192   196            1   215.1  130.3  129.9    10.3  11.5     139.7\n193   197            1   214.8  130.3  130.4    10.6  11.1     140.0\n194   198            1   214.7  130.7  130.8    11.2  11.2     139.4\n195   199            1   214.3  129.9  129.9    10.2  11.5     139.6\n\n[196 rows x 8 columns]"},"exec_count":57}},"pos":73,"start":1659464300935,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464301306,"exec_count":58,"id":"25730d","input":"print(input_columns.columns)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"Index(['Index', 'Length', 'Left', 'Right', 'Bottom', 'Top', 'Diagonal'], dtype='object')\n"}},"pos":74,"start":1659464301304,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464301317,"exec_count":59,"id":"e919bd","input":"print (new_banknotes_dataset.Counterfeit.unique())","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"[0 1]\n"}},"pos":75,"start":1659464301313,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464301493,"exec_count":60,"id":"30afbc","input":" from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.datasets import make_classification","kernel":"ds_env","no_halt":true,"pos":77,"start":1659464301324,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464301659,"exec_count":61,"id":"036741","input":">>> rfc = RandomForestClassifier(max_depth=2, random_state=0)\n>>> rfc.fit(x_train, y_train)\n","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(max_depth=2, random_state=0)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(max_depth=2, random_state=0)</pre></div></div></div></div></div>","text/plain":"RandomForestClassifier(max_depth=2, random_state=0)"},"exec_count":61}},"pos":78,"start":1659464301510,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464301686,"exec_count":62,"id":"79a297","input":"rfc.score(x_test, y_test)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"1.0"},"exec_count":62}},"pos":79,"start":1659464301669,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464301711,"exec_count":63,"id":"c9ae43","input":"y_cat=rfc.predict(x_test)\n\nprint(y_cat)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"[0 1 0 0 1 1 1 1 0 0 1 1 1 1 0 0 0 1 1 0 1 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 1\n 1 1 0]\n"}},"pos":80,"start":1659464301691,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464301732,"exec_count":64,"id":"d90be6","input":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, y_cat))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        17\n           1       1.00      1.00      1.00        23\n\n    accuracy                           1.00        40\n   macro avg       1.00      1.00      1.00        40\nweighted avg       1.00      1.00      1.00        40\n\n"}},"pos":82,"start":1659464301717,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464301892,"exec_count":65,"id":"7f1312","input":"import sklearn\nfrom sklearn.neighbors import KNeighborsClassifier as KNN\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib.colors import ListedColormap\nfrom sklearn import neighbors, datasets\nfrom sklearn.inspection import DecisionBoundaryDisplay","kernel":"ds_env","no_halt":true,"pos":86,"start":1659464301737,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464301911,"exec_count":66,"id":"5191a2","input":"k=5\nmy_KNN_model = KNN(n_neighbors=k)","kernel":"ds_env","no_halt":true,"pos":87,"start":1659464301909,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464301942,"exec_count":67,"id":"8e9fd8","input":"my_KNN_model.fit(x_train, y_train)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div></div></div>","text/plain":"KNeighborsClassifier()"},"exec_count":67}},"pos":88,"start":1659464301924,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464301955,"exec_count":68,"id":"8b82e9","input":"p_hat = my_KNN_model.predict(x_test)","kernel":"ds_env","no_halt":true,"pos":89,"start":1659464301949,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464301966,"exec_count":69,"id":"2a25d4","input":"np.array(y_test)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"array([0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0,\n       0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0])"},"exec_count":69}},"pos":90,"start":1659464301961,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464301981,"exec_count":70,"id":"58822f","input":"np.array(y_test)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"array([0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0,\n       0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0])"},"exec_count":70}},"pos":91,"start":1659464301970,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464301996,"exec_count":71,"id":"2618bd","input":"total_squared_error = (np.sum((y_test - p_hat)**2))\nmean_squared_error = total_squared_error/len(y_test) \nprint(mean_squared_error)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"0.025\n"}},"pos":92,"start":1659464301989,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464302199,"exec_count":72,"id":"b37db6","input":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, p_hat), annot=True, fmt='g')","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":72},"1":{"data":{"image/png":"6fbab1f1d8daeb2bbbf381ef0f6324bad0bdebe0","text/plain":"<Figure size 432x288 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":93,"start":1659464302000,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464302211,"exec_count":73,"id":"293e07","input":"from sklearn.datasets import make_hastie_10_2\nfrom sklearn.ensemble import GradientBoostingClassifier","kernel":"ds_env","no_halt":true,"pos":96,"start":1659464302207,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464302263,"exec_count":74,"id":"9d25d8","input":"MyGBC = GradientBoostingClassifier(n_estimators=100, learning_rate=1.0, max_depth=1, random_state=0).fit(x_train, y_train)","kernel":"ds_env","no_halt":true,"pos":98,"start":1659464302220,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464302278,"exec_count":75,"id":"f34534","input":"MyGBC.score(x_test, y_test)\n","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"0.975"},"exec_count":75}},"pos":99,"start":1659464302266,"state":"done","type":"cell"}
{"cell_type":"code","end":1659464302304,"exec_count":76,"id":"ca27e1","input":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, y_hat))","kernel":"ds_env","no_halt":true,"output":{"0":{"ename":"NameError","evalue":"name 'y_hat' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [76]\u001b[0m, in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01msklearn\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mmetrics\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m classification_report\n\u001b[0;32m----> 2\u001b[0m \u001b[38;5;28mprint\u001b[39m(classification_report(y_test, \u001b[43my_hat\u001b[49m))\n","\u001b[0;31mNameError\u001b[0m: name 'y_hat' is not defined"]}},"pos":100,"start":1659464302293,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":32,"id":"740346","input":"","kernel":"ds_env","no_halt":true,"output":{"0":{"ename":"ValueError","evalue":"Value of 'x' is not the name of a column in 'data_frame'. Expected one of ['Index', 'Counterfeit', 'Length', 'Left', 'Right', 'Bottom', 'Top', 'Diagonal'] but received: DIagonal","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","Input \u001b[0;32mIn [32]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m fig \u001b[38;5;241m=\u001b[39m \u001b[43mpx\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mscatter\u001b[49m\u001b[43m(\u001b[49m\u001b[43mnew_banknotes_dataset\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mx\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mDIagonal\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mBottom\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcolor\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mCounterfeit\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[1;32m      2\u001b[0m fig\u001b[38;5;241m.\u001b[39mshow()\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/plotly/express/_chart_types.py:66\u001b[0m, in \u001b[0;36mscatter\u001b[0;34m(data_frame, x, y, color, symbol, size, hover_name, hover_data, custom_data, text, facet_row, facet_col, facet_col_wrap, facet_row_spacing, facet_col_spacing, error_x, error_x_minus, error_y, error_y_minus, animation_frame, animation_group, category_orders, labels, orientation, color_discrete_sequence, color_discrete_map, color_continuous_scale, range_color, color_continuous_midpoint, symbol_sequence, symbol_map, opacity, size_max, marginal_x, marginal_y, trendline, trendline_options, trendline_color_override, trendline_scope, log_x, log_y, range_x, range_y, render_mode, title, template, width, height)\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mscatter\u001b[39m(\n\u001b[1;32m     13\u001b[0m     data_frame\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[1;32m     14\u001b[0m     x\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m     60\u001b[0m     height\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[1;32m     61\u001b[0m ):\n\u001b[1;32m     62\u001b[0m     \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m     63\u001b[0m \u001b[38;5;124;03m    In a scatter plot, each row of `data_frame` is represented by a symbol\u001b[39;00m\n\u001b[1;32m     64\u001b[0m \u001b[38;5;124;03m    mark in 2D space.\u001b[39;00m\n\u001b[1;32m     65\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[0;32m---> 66\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mmake_figure\u001b[49m\u001b[43m(\u001b[49m\u001b[43margs\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mlocals\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mconstructor\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mgo\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mScatter\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/plotly/express/_core.py:1945\u001b[0m, in \u001b[0;36mmake_figure\u001b[0;34m(args, constructor, trace_patch, layout_patch)\u001b[0m\n\u001b[1;32m   1942\u001b[0m layout_patch \u001b[38;5;241m=\u001b[39m layout_patch \u001b[38;5;129;01mor\u001b[39;00m {}\n\u001b[1;32m   1943\u001b[0m apply_default_cascade(args)\n\u001b[0;32m-> 1945\u001b[0m args \u001b[38;5;241m=\u001b[39m \u001b[43mbuild_dataframe\u001b[49m\u001b[43m(\u001b[49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mconstructor\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1946\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m constructor \u001b[38;5;129;01min\u001b[39;00m [go\u001b[38;5;241m.\u001b[39mTreemap, go\u001b[38;5;241m.\u001b[39mSunburst, go\u001b[38;5;241m.\u001b[39mIcicle] \u001b[38;5;129;01mand\u001b[39;00m args[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mpath\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m   1947\u001b[0m     args \u001b[38;5;241m=\u001b[39m process_dataframe_hierarchy(args)\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/plotly/express/_core.py:1405\u001b[0m, in \u001b[0;36mbuild_dataframe\u001b[0;34m(args, constructor)\u001b[0m\n\u001b[1;32m   1402\u001b[0m     args[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcolor\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m   1403\u001b[0m \u001b[38;5;66;03m# now that things have been prepped, we do the systematic rewriting of `args`\u001b[39;00m\n\u001b[0;32m-> 1405\u001b[0m df_output, wide_id_vars \u001b[38;5;241m=\u001b[39m \u001b[43mprocess_args_into_dataframe\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   1406\u001b[0m \u001b[43m    \u001b[49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mwide_mode\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mvar_name\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mvalue_name\u001b[49m\n\u001b[1;32m   1407\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1409\u001b[0m \u001b[38;5;66;03m# now that `df_output` exists and `args` contains only references, we complete\u001b[39;00m\n\u001b[1;32m   1410\u001b[0m \u001b[38;5;66;03m# the special-case and wide-mode handling by further rewriting args and/or mutating\u001b[39;00m\n\u001b[1;32m   1411\u001b[0m \u001b[38;5;66;03m# df_output\u001b[39;00m\n\u001b[1;32m   1413\u001b[0m count_name \u001b[38;5;241m=\u001b[39m _escape_col_name(df_output, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcount\u001b[39m\u001b[38;5;124m\"\u001b[39m, [var_name, value_name])\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/plotly/express/_core.py:1207\u001b[0m, in \u001b[0;36mprocess_args_into_dataframe\u001b[0;34m(args, wide_mode, var_name, value_name)\u001b[0m\n\u001b[1;32m   1205\u001b[0m         \u001b[38;5;28;01mif\u001b[39;00m argument \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mindex\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n\u001b[1;32m   1206\u001b[0m             err_msg \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124m To use the index, pass it in directly as `df.index`.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m-> 1207\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(err_msg)\n\u001b[1;32m   1208\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m length \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(df_input[argument]) \u001b[38;5;241m!=\u001b[39m length:\n\u001b[1;32m   1209\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[1;32m   1210\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mAll arguments should have the same length. \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m   1211\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mThe length of column argument `df[\u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[38;5;124m]` is \u001b[39m\u001b[38;5;132;01m%d\u001b[39;00m\u001b[38;5;124m, whereas the \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   1218\u001b[0m         )\n\u001b[1;32m   1219\u001b[0m     )\n","\u001b[0;31mValueError\u001b[0m: Value of 'x' is not the name of a column in 'data_frame'. Expected one of ['Index', 'Counterfeit', 'Length', 'Left', 'Right', 'Bottom', 'Top', 'Diagonal'] but received: DIagonal"]}},"pos":42,"state":"done","type":"cell"}
{"cell_type":"code","id":"0f6bcc","input":"","pos":17,"type":"cell"}
{"cell_type":"code","id":"271d64","input":"","pos":97,"type":"cell"}
{"cell_type":"code","id":"2d8d95","input":"y_pot=XGBModel.predict(x_test)\ny_pot","kernel":"ds_env","no_halt":true,"pos":107,"state":"run","type":"cell"}
{"cell_type":"code","id":"358dfa","input":"","pos":81,"type":"cell"}
{"cell_type":"code","id":"38847d","input":"XGBModel.score(x_test, y_test)","kernel":"ds_env","no_halt":true,"pos":108,"state":"run","type":"cell"}
{"cell_type":"code","id":"394b82","input":"XGBModel = DecisionTreeClassifier().fit(x_train, y_train)","kernel":"ds_env","no_halt":true,"pos":105,"state":"run","type":"cell"}
{"cell_type":"code","id":"42e4e7","input":"","pos":106,"type":"cell"}
{"cell_type":"code","id":"4f6cf7","input":"","pos":84,"type":"cell"}
{"cell_type":"code","id":"57e0f7","input":"from sklearn.tree import DecisionTreeClassifier","kernel":"ds_env","no_halt":true,"pos":104,"state":"run","type":"cell"}
{"cell_type":"code","id":"59500d","input":"","pos":10,"type":"cell"}
{"cell_type":"code","id":"638032","input":"","pos":70,"type":"cell"}
{"cell_type":"code","id":"63aedb","input":"","pos":2,"type":"cell"}
{"cell_type":"code","id":"739236","input":"","pos":94,"type":"cell"}
{"cell_type":"code","id":"755676","input":"","pos":83,"type":"cell"}
{"cell_type":"code","id":"852cad","input":"","pos":102,"type":"cell"}
{"cell_type":"code","id":"b072df","input":"","pos":34,"type":"cell"}
{"cell_type":"code","id":"c35f41","input":"!pip install xgboost\nimport xgboost as xgb","kernel":"ds_env","no_halt":true,"pos":103,"start":1659464302321,"state":"busy","type":"cell"}
{"cell_type":"code","id":"c9699e","input":"","pos":12,"type":"cell"}
{"cell_type":"code","id":"cccddd","input":"    ","pos":110,"type":"cell"}
{"cell_type":"code","id":"e79101","input":"","pos":0,"type":"cell"}
{"cell_type":"code","id":"e9c88e","input":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, y_pot))","kernel":"ds_env","no_halt":true,"pos":109,"state":"run","type":"cell"}
{"cell_type":"markdown","id":"003b49","input":"# Exploratory Data Analysis\n\n","pos":18,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"130e68","input":"### Jayden - SVC\n\n","pos":57,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"253e0d","input":"### Dhruv - Logistic Regression\n\n","pos":46,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"32e0db","input":"### Dhrupadh - Boosting","pos":95,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"38866a","input":"## Dhrupadh \\- XGBoosting\n\n","pos":101,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"3db677","input":"# Perform Preprocessing of Data\n\n","pos":6,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"5b2bf4","input":"### Holly - Random Forest\n\n","pos":76,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"61b81d","input":"# 2D Plot Data & Analysis:\n\nMatthew:\n\n","pos":33,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"629f21","input":"# Import Libraries","pos":1,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"8d2bb0","input":"Apply Split -> Fit -> Predict -> Evaluate for all machine learning models.\n\n","pos":44,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"cb794f","input":"# From 3D Plots & Further Analysis:\n\nDhrupadh: \n\nSo what we can see from the plots are the correlation between many of these 3D groups and where the counterfeit outputs tend to be distinct from the \"real\" values. We can see the clear difference in the plots and it really helps to visualize what correlation each column of the data set has with other columns and how it will affect the outcome of how it is counterfeit or not. In some plots we can see a very clear difference between the two different banknotes. In other plots, there are aspects that we can notice about the different banknote types that may not exactly show a complete split between the two but that one seems to span across the whole plot while the other value will end up sticking towards the bottom. The plots also help us notice a lot of outliers and see the nature of our data visually.\n","pos":19,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"cfbd9a","input":"### Matthew - KNN","pos":85,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"d240e2","input":"# Machine Learning","pos":43,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"d3fe39","input":"### Nolawi - Decision Tree\n\n","pos":68,"state":"done","type":"cell"}
{"id":0,"time":1659464778671,"type":"user"}
{"last_load":1659450306173,"type":"file"}