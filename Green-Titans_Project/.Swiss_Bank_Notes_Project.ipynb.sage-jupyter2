{"backend_state":"running","connection_file":"/projects/d5de4790-84b9-4555-9a80-ef455fafa128/.local/share/jupyter/runtime/kernel-0624f602-d20c-442a-b3fa-1ca4cf5fc548.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1659645225542,"exec_count":2,"id":"8ac3ec","input":"import pandas as pd\nimport numpy as np\nimport plotly.express as px\n","kernel":"ds_env","no_halt":true,"pos":4,"start":1659645225159,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645225572,"exec_count":3,"id":"d23109","input":"banknotes_dataset = pd.read_csv(\"banknotes.csv\")","kernel":"ds_env","no_halt":true,"pos":5,"start":1659645225555,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645225582,"exec_count":4,"id":"0b6848","input":"banknotes_dataset.rename(index=str, columns={'conterfeit': 'Counterfeit'}, inplace=True) ","kernel":"ds_env","no_halt":true,"pos":6,"start":1659645225579,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645225640,"exec_count":5,"id":"f20913","input":"new_df = []\n# Step 1: loop over each row in the dataset\nfor row in banknotes_dataset.itertuples():\n    temp_list = []\n    if row[6] == 11.2 and row[5] == 8 and row[7] == 139.6 and row[1] == 0:\n        print('first_outlier!')\n    elif row[4] == 130.2 and row[3] == 130.2 and row[7] ==139.6:\n        print('outlier2')   \n    elif row[6] == 11.7 and row[5] == 7.9 and row[3] ==130.4:\n        print('outlier3')\n    elif row[6] ==11.1 and row[5] == 9 and row[3] ==130.7:\n        print('outlier4')\n    elif row[3] ==129.6 and row[4] ==129.7 and row[5]== 10.4:\n        print('outlier5')\n    elif row[2] ==214.9 and row[7] ==139.6 and row[6] ==11.2:\n        print('outlier6')\n    else:\n        temp_list.append(list(row))\n        new_df.append(temp_list[0])\n\nnew_banknotes_dataset = pd.DataFrame(new_df, columns = [\"Index\", 'Counterfeit', 'Length', 'Left', 'Right', 'Bottom', 'Top', 'Diagonal'])\nnew_banknotes_dataset.drop('Index', axis = 1)\n","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"outlier5\noutlier3\nfirst_outlier!\noutlier4\n"},"1":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Counterfeit</th>\n      <th>Length</th>\n      <th>Left</th>\n      <th>Right</th>\n      <th>Bottom</th>\n      <th>Top</th>\n      <th>Diagonal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>131.0</td>\n      <td>131.1</td>\n      <td>9.0</td>\n      <td>9.7</td>\n      <td>141.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>214.6</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.1</td>\n      <td>9.5</td>\n      <td>141.7</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.7</td>\n      <td>9.6</td>\n      <td>142.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.6</td>\n      <td>7.5</td>\n      <td>10.4</td>\n      <td>142.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>215.7</td>\n      <td>130.8</td>\n      <td>130.5</td>\n      <td>9.0</td>\n      <td>10.1</td>\n      <td>141.4</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>191</th>\n      <td>1</td>\n      <td>215.0</td>\n      <td>130.4</td>\n      <td>130.3</td>\n      <td>9.9</td>\n      <td>12.1</td>\n      <td>139.6</td>\n    </tr>\n    <tr>\n      <th>192</th>\n      <td>1</td>\n      <td>215.1</td>\n      <td>130.3</td>\n      <td>129.9</td>\n      <td>10.3</td>\n      <td>11.5</td>\n      <td>139.7</td>\n    </tr>\n    <tr>\n      <th>193</th>\n      <td>1</td>\n      <td>214.8</td>\n      <td>130.3</td>\n      <td>130.4</td>\n      <td>10.6</td>\n      <td>11.1</td>\n      <td>140.0</td>\n    </tr>\n    <tr>\n      <th>194</th>\n      <td>1</td>\n      <td>214.7</td>\n      <td>130.7</td>\n      <td>130.8</td>\n      <td>11.2</td>\n      <td>11.2</td>\n      <td>139.4</td>\n    </tr>\n    <tr>\n      <th>195</th>\n      <td>1</td>\n      <td>214.3</td>\n      <td>129.9</td>\n      <td>129.9</td>\n      <td>10.2</td>\n      <td>11.5</td>\n      <td>139.6</td>\n    </tr>\n  </tbody>\n</table>\n<p>196 rows Ã— 7 columns</p>\n</div>","text/plain":"     Counterfeit  Length   Left  Right  Bottom   Top  Diagonal\n0              0   214.8  131.0  131.1     9.0   9.7     141.0\n1              0   214.6  129.7  129.7     8.1   9.5     141.7\n2              0   214.8  129.7  129.7     8.7   9.6     142.2\n3              0   214.8  129.7  129.6     7.5  10.4     142.0\n4              0   215.7  130.8  130.5     9.0  10.1     141.4\n..           ...     ...    ...    ...     ...   ...       ...\n191            1   215.0  130.4  130.3     9.9  12.1     139.6\n192            1   215.1  130.3  129.9    10.3  11.5     139.7\n193            1   214.8  130.3  130.4    10.6  11.1     140.0\n194            1   214.7  130.7  130.8    11.2  11.2     139.4\n195            1   214.3  129.9  129.9    10.2  11.5     139.6\n\n[196 rows x 7 columns]"},"exec_count":5}},"pos":8,"start":1659645225593,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645225652,"exec_count":6,"id":"f2c2b4","input":"new_banknotes_dataset.shape","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"(196, 8)"},"exec_count":6}},"pos":9,"start":1659645225647,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645225659,"exec_count":7,"id":"2a790b","input":"# Step 2: ","kernel":"ds_env","no_halt":true,"pos":10,"start":1659645225655,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645225675,"exec_count":8,"id":"4767e6","input":"banknotes_dataset.head()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Counterfeit</th>\n      <th>Length</th>\n      <th>Left</th>\n      <th>Right</th>\n      <th>Bottom</th>\n      <th>Top</th>\n      <th>Diagonal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>131.0</td>\n      <td>131.1</td>\n      <td>9.0</td>\n      <td>9.7</td>\n      <td>141.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>214.6</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.1</td>\n      <td>9.5</td>\n      <td>141.7</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.7</td>\n      <td>9.6</td>\n      <td>142.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.6</td>\n      <td>7.5</td>\n      <td>10.4</td>\n      <td>142.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>215.0</td>\n      <td>129.6</td>\n      <td>129.7</td>\n      <td>10.4</td>\n      <td>7.7</td>\n      <td>141.8</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   Counterfeit  Length   Left  Right  Bottom   Top  Diagonal\n0            0   214.8  131.0  131.1     9.0   9.7     141.0\n1            0   214.6  129.7  129.7     8.1   9.5     141.7\n2            0   214.8  129.7  129.7     8.7   9.6     142.2\n3            0   214.8  129.7  129.6     7.5  10.4     142.0\n4            0   215.0  129.6  129.7    10.4   7.7     141.8"},"exec_count":8}},"pos":12,"scrolled":true,"start":1659645225662,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645225693,"exec_count":9,"id":"7ae2f4","input":"# Nolawi","kernel":"ds_env","no_halt":true,"pos":14,"start":1659645225685,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645225716,"exec_count":10,"id":"a02ab4","input":"banknotes_dataset.tail()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Counterfeit</th>\n      <th>Length</th>\n      <th>Left</th>\n      <th>Right</th>\n      <th>Bottom</th>\n      <th>Top</th>\n      <th>Diagonal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>195</th>\n      <td>1</td>\n      <td>215.0</td>\n      <td>130.4</td>\n      <td>130.3</td>\n      <td>9.9</td>\n      <td>12.1</td>\n      <td>139.6</td>\n    </tr>\n    <tr>\n      <th>196</th>\n      <td>1</td>\n      <td>215.1</td>\n      <td>130.3</td>\n      <td>129.9</td>\n      <td>10.3</td>\n      <td>11.5</td>\n      <td>139.7</td>\n    </tr>\n    <tr>\n      <th>197</th>\n      <td>1</td>\n      <td>214.8</td>\n      <td>130.3</td>\n      <td>130.4</td>\n      <td>10.6</td>\n      <td>11.1</td>\n      <td>140.0</td>\n    </tr>\n    <tr>\n      <th>198</th>\n      <td>1</td>\n      <td>214.7</td>\n      <td>130.7</td>\n      <td>130.8</td>\n      <td>11.2</td>\n      <td>11.2</td>\n      <td>139.4</td>\n    </tr>\n    <tr>\n      <th>199</th>\n      <td>1</td>\n      <td>214.3</td>\n      <td>129.9</td>\n      <td>129.9</td>\n      <td>10.2</td>\n      <td>11.5</td>\n      <td>139.6</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"     Counterfeit  Length   Left  Right  Bottom   Top  Diagonal\n195            1   215.0  130.4  130.3     9.9  12.1     139.6\n196            1   215.1  130.3  129.9    10.3  11.5     139.7\n197            1   214.8  130.3  130.4    10.6  11.1     140.0\n198            1   214.7  130.7  130.8    11.2  11.2     139.4\n199            1   214.3  129.9  129.9    10.2  11.5     139.6"},"exec_count":10}},"pos":15,"scrolled":true,"start":1659645225714,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645225726,"exec_count":11,"id":"736b1a","input":"banknotes_dataset.drop_duplicates(inplace=True)","kernel":"ds_env","no_halt":true,"pos":16,"start":1659645225719,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645225745,"exec_count":12,"id":"476463","input":"banknotes_dataset","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Counterfeit</th>\n      <th>Length</th>\n      <th>Left</th>\n      <th>Right</th>\n      <th>Bottom</th>\n      <th>Top</th>\n      <th>Diagonal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>131.0</td>\n      <td>131.1</td>\n      <td>9.0</td>\n      <td>9.7</td>\n      <td>141.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>214.6</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.1</td>\n      <td>9.5</td>\n      <td>141.7</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.7</td>\n      <td>9.6</td>\n      <td>142.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.6</td>\n      <td>7.5</td>\n      <td>10.4</td>\n      <td>142.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>215.0</td>\n      <td>129.6</td>\n      <td>129.7</td>\n      <td>10.4</td>\n      <td>7.7</td>\n      <td>141.8</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>195</th>\n      <td>1</td>\n      <td>215.0</td>\n      <td>130.4</td>\n      <td>130.3</td>\n      <td>9.9</td>\n      <td>12.1</td>\n      <td>139.6</td>\n    </tr>\n    <tr>\n      <th>196</th>\n      <td>1</td>\n      <td>215.1</td>\n      <td>130.3</td>\n      <td>129.9</td>\n      <td>10.3</td>\n      <td>11.5</td>\n      <td>139.7</td>\n    </tr>\n    <tr>\n      <th>197</th>\n      <td>1</td>\n      <td>214.8</td>\n      <td>130.3</td>\n      <td>130.4</td>\n      <td>10.6</td>\n      <td>11.1</td>\n      <td>140.0</td>\n    </tr>\n    <tr>\n      <th>198</th>\n      <td>1</td>\n      <td>214.7</td>\n      <td>130.7</td>\n      <td>130.8</td>\n      <td>11.2</td>\n      <td>11.2</td>\n      <td>139.4</td>\n    </tr>\n    <tr>\n      <th>199</th>\n      <td>1</td>\n      <td>214.3</td>\n      <td>129.9</td>\n      <td>129.9</td>\n      <td>10.2</td>\n      <td>11.5</td>\n      <td>139.6</td>\n    </tr>\n  </tbody>\n</table>\n<p>200 rows Ã— 7 columns</p>\n</div>","text/plain":"     Counterfeit  Length   Left  Right  Bottom   Top  Diagonal\n0              0   214.8  131.0  131.1     9.0   9.7     141.0\n1              0   214.6  129.7  129.7     8.1   9.5     141.7\n2              0   214.8  129.7  129.7     8.7   9.6     142.2\n3              0   214.8  129.7  129.6     7.5  10.4     142.0\n4              0   215.0  129.6  129.7    10.4   7.7     141.8\n..           ...     ...    ...    ...     ...   ...       ...\n195            1   215.0  130.4  130.3     9.9  12.1     139.6\n196            1   215.1  130.3  129.9    10.3  11.5     139.7\n197            1   214.8  130.3  130.4    10.6  11.1     140.0\n198            1   214.7  130.7  130.8    11.2  11.2     139.4\n199            1   214.3  129.9  129.9    10.2  11.5     139.6\n\n[200 rows x 7 columns]"},"exec_count":12}},"pos":17,"start":1659645225729,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645225752,"exec_count":13,"id":"80815f","input":"# Dhrupadh","kernel":"ds_env","no_halt":true,"pos":21,"start":1659645225748,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645226136,"exec_count":14,"id":"48abbb","input":"#plot 1\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Top', y='Bottom', z='Diagonal', color='Counterfeit')\nfig.update_layout(height = 400, width = 800)\nfig.show()\nfig.write_html(\"Website/startbootstrap-stylish-portfolio-gh-pages/diagonal_top_bottom.html\")","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"bd523339d5197e2fe96f0870c70ef513aeeb8424"}}},"pos":22,"start":1659645225757,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645226224,"exec_count":15,"id":"40c3b3","input":"#plot 2\ndf = banknotes_dataset\nfig = px.scatter_3d(df, x='Right', y='Left', z='Diagonal', color='Counterfeit')\nfig.update_layout(height = 400, width = 800)\nfig.show()\nfig.write_html(\"Website/startbootstrap-stylish-portfolio-gh-pages/diagonal_left_right.html\")","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"57539930ebd9fce42cfc2248cef00baf525843c0"}}},"pos":23,"start":1659645226150,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645226308,"exec_count":16,"id":"36c03b","input":"#plot 3\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Top', y='Bottom', z='Left', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"8f1990349ac47196555b05fb47f125db699dc193"}}},"pos":24,"start":1659645226231,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645226379,"exec_count":17,"id":"82f5cc","input":"#plot 4\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Top', y='Bottom', z='Right', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"c6236e11ff73cb6cd92ac37e1bf9628504c1f4a0"}}},"pos":25,"start":1659645226317,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645226469,"exec_count":18,"id":"aabc35","input":"#plot 5\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Left', y='Right', z='Top', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"69b99c65c7f6294a60f9d71a0885ebbb42d2843e"}}},"pos":26,"start":1659645226382,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645226569,"exec_count":19,"id":"b9f57d","input":"#plot 6\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Left', y='Right', z='Bottom', color='Counterfeit')\nfig.update_layout(height = 400, width = 800)\nfig.show()\nfig.write_html(\"Website/startbootstrap-stylish-portfolio-gh-pages/bottom_left_right.html\")","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"6ac53f4caa54a0e2cdd61cfb1cddea0317777d1c"}}},"pos":27,"start":1659645226481,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645226639,"exec_count":20,"id":"ac033e","input":"#plot 7\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Length', y='Diagonal', z='Top', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"82705a6783efc22724f40d0bbf7f8012785e01c7"}}},"pos":28,"start":1659645226581,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645226703,"exec_count":21,"id":"52f772","input":"#plot 8\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Length', y='Diagonal', z='Bottom', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"8a8471e68f7d9e4e0d5aa86971cf0edeb767bf4e"}}},"pos":29,"start":1659645226669,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645226767,"exec_count":22,"id":"567e86","input":"#plot 9\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Length', y='Diagonal', z='Left', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"f47a0af06295745a90c22cfeef594c99d116dad0"}}},"pos":30,"start":1659645226719,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645226840,"exec_count":23,"id":"c090db","input":"#plot 10\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Length', y='Diagonal', z='Right', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"2753ffb6247cc6ea2117d9fb5273940575bd9438"}}},"pos":31,"start":1659645226780,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645226915,"exec_count":24,"id":"b5bbd3","input":"#plot 11\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Left', y='Right', z='Length', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"b35dad5a976cf16dd17c6a82966b92539d9e33d5"}}},"pos":32,"start":1659645226849,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645226986,"exec_count":25,"id":"81ac18","input":"#plot 12\ndf = new_banknotes_dataset\nfig = px.scatter_3d(df, x='Top', y='Bottom', z='Length', color='Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"fefbaf9e9d07e943700d3ed1211a71901bb50c3c"}}},"pos":33,"start":1659645226934,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645227064,"exec_count":26,"id":"1015cb","input":"fig = px.scatter(new_banknotes_dataset, x=\"Bottom\", y=\"Length\", color= 'Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"2512245c85c02ed306d6838919a8e4ea06d8b7c0"}}},"pos":36,"start":1659645226993,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645227148,"exec_count":27,"id":"5c0118","input":"fig = px.scatter(new_banknotes_dataset, x=\"Length\", y=\"Diagonal\", color='Counterfeit')\nfig.update_layout(height = 400, width = 800)\nfig.show()\nfig.write_html(\"Website/startbootstrap-stylish-portfolio-gh-pages/length_diagonal.html\")","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"4b268a26a4df09de8f44bdd4848fe7385807da18"}}},"pos":37,"start":1659645227077,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645227210,"exec_count":28,"id":"85ecf5","input":"fig = px.scatter(new_banknotes_dataset, x=\"Right\", y=\"Left\", color= 'Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"750e307424aababab70a5e16bdb01d15b8f80ade"}}},"pos":38,"start":1659645227151,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645228115,"exec_count":29,"id":"e85d9c","input":"df = new_banknotes_dataset[\"Left\"].hist()\n","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"image/png":"bf6da964ab23a1a216e98ad2c64ca5ef9f95fe1c","text/plain":"<Figure size 432x288 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":39,"start":1659645227215,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645228265,"exec_count":30,"id":"bd75de","input":"df = new_banknotes_dataset[\"Right\"].hist()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"image/png":"ad3234fc9a47e724a7f2a33b8a5e377df777ef79","text/plain":"<Figure size 432x288 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":40,"scrolled":true,"start":1659645228119,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645228355,"exec_count":31,"id":"7e9c10","input":"fig = px.scatter(new_banknotes_dataset, x=\"Bottom\", y=\"Top\", color= 'Counterfeit')\nfig.update_layout(height = 400, width = 800)\nfig.show()\nfig.write_html(\"Website/startbootstrap-stylish-portfolio-gh-pages/top_bottom.html\")","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"12a57bf905d8d93e6d73e6ff98ec48afa34ee6b4"}}},"pos":41,"start":1659645228278,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645228419,"exec_count":32,"id":"b41441","input":"fig = px.scatter(new_banknotes_dataset, x=\"Top\", y=\"Diagonal\", color= 'Counterfeit')\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"ffb9f2919248647e3952068f96ff659682c6b582"}}},"pos":42,"start":1659645228369,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645228603,"exec_count":33,"id":"740346","input":"fig = px.scatter(new_banknotes_dataset, x=\"Diagonal\", y=\"Bottom\", color= 'Counterfeit')\nfig.update_layout(height = 400, width = 800)\nfig.show()\nfig.write_html(\"Website/startbootstrap-stylish-portfolio-gh-pages/diagonal_bottom.html\")","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"9b3dd0726a4cfd8a9b4cea8f24b8c623026c91fd"}}},"pos":43,"start":1659645228433,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229343,"exec_count":34,"id":"7a5fd1","input":"# Jayden\nimport sklearn\nfrom sklearn.model_selection import train_test_split\n\ntarget = new_banknotes_dataset[\"Counterfeit\"] # target\ninput_columns = new_banknotes_dataset.loc[:, new_banknotes_dataset.columns != \"Counterfeit\"]\ninput_columns.drop('Index', axis=1, inplace=True)\n# defines the input columns\nx_train, x_test, y_train, y_test = train_test_split(input_columns, target, test_size=0.2)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stderr","text":"/tmp/ipykernel_9212/1047153769.py:7: SettingWithCopyWarning:\n\n\nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n\n"}},"pos":46,"start":1659645228620,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229354,"exec_count":35,"id":"d65111","input":"# Dhruv","kernel":"ds_env","no_halt":true,"pos":48,"start":1659645229350,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229386,"exec_count":36,"id":"dbf9a6","input":"from sklearn.linear_model import LogisticRegression\nlogisticRegr = LogisticRegression()","kernel":"ds_env","no_halt":true,"pos":49,"start":1659645229367,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229419,"exec_count":37,"id":"8870c4","input":"logisticRegr.fit(x_train, y_train)\npredictions = logisticRegr.predict(x_test)","kernel":"ds_env","no_halt":true,"pos":50,"start":1659645229403,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229427,"exec_count":38,"id":"9624a8","input":"y_cot=logisticRegr.predict(x_test)","kernel":"ds_env","no_halt":true,"pos":51,"start":1659645229422,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229438,"exec_count":39,"id":"ab4109","input":"print(y_cot)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"[1 1 1 0 1 0 1 0 0 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 0 0 0 1 1 1 0 1 0 1\n 0 0 1]\n"}},"pos":52,"start":1659645229433,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229463,"exec_count":40,"id":"fa1e6f","input":"# Train accuracy\nfrom sklearn import metrics\ny_train_pred = logisticRegr.predict(x_train) \nmetrics.accuracy_score(y_train, y_train_pred) \nlogisticRegr.score(x_train, y_train)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"1.0"},"exec_count":40}},"pos":53,"start":1659645229449,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229479,"exec_count":41,"id":"cba5e8","input":"# Test accuracy\nnp.array(y_test)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"array([1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n       1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1])"},"exec_count":41}},"pos":54,"start":1659645229467,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229487,"exec_count":42,"id":"8af04e","input":"# F1-Score","kernel":"ds_env","no_halt":true,"pos":55,"start":1659645229485,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229499,"exec_count":43,"id":"aff2d5","input":"# Precision","kernel":"ds_env","no_halt":true,"pos":56,"start":1659645229498,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229516,"exec_count":44,"id":"b5e245","input":"# Recallbfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import classification_report\nprint(classification_report(y_test, y_cot))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        18\n           1       1.00      1.00      1.00        22\n\n    accuracy                           1.00        40\n   macro avg       1.00      1.00      1.00        40\nweighted avg       1.00      1.00      1.00        40\n\n"}},"pos":57,"start":1659645229503,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229542,"exec_count":45,"id":"5de5fd","input":"fig = px.imshow(confusion_matrix(y_test, logisticRegr.predict(x_test)), text_auto=True)\nfig.show()\nfig.write_html(\"Website/startbootstrap-stylish-portfolio-gh-pages/Logistic_Reg_Conf_Mat.html\")","kernel":"ds_env","no_halt":true,"output":{"0":{"ename":"NameError","evalue":"name 'confusion_matrix' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [45]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m fig \u001b[38;5;241m=\u001b[39m px\u001b[38;5;241m.\u001b[39mimshow(\u001b[43mconfusion_matrix\u001b[49m(y_test, logisticRegr\u001b[38;5;241m.\u001b[39mpredict(x_test)), text_auto\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m)\n\u001b[1;32m      2\u001b[0m fig\u001b[38;5;241m.\u001b[39mshow()\n\u001b[1;32m      3\u001b[0m fig\u001b[38;5;241m.\u001b[39mwrite_html(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mWebsite/startbootstrap-stylish-portfolio-gh-pages/Logistic_Reg_Conf_Mat.html\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n","\u001b[0;31mNameError\u001b[0m: name 'confusion_matrix' is not defined"]}},"pos":58,"start":1659645229532,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229550,"exec_count":46,"id":"76c177","input":"# Jayden","kernel":"ds_env","no_halt":true,"pos":60,"start":1659645229547,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229560,"exec_count":47,"id":"6e3621","input":"new_banknotes_dataset.shape","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"(196, 8)"},"exec_count":47}},"pos":61,"start":1659645229555,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229570,"exec_count":48,"id":"29cbc3","input":"x_train.shape","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"(156, 6)"},"exec_count":48}},"pos":62,"start":1659645229564,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229579,"exec_count":49,"id":"a19d59","input":"import matplotlib.pyplot as plt\nfrom sklearn import svm\nfrom sklearn.linear_model import LinearRegression","kernel":"ds_env","no_halt":true,"pos":63,"start":1659645229572,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229600,"exec_count":50,"id":"c760f1","input":"lr = LinearRegression()","kernel":"ds_env","no_halt":true,"pos":64,"start":1659645229582,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229620,"exec_count":51,"id":"d7fc09","input":"lr.fit(x_train, y_train)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>","text/plain":"LinearRegression()"},"exec_count":51}},"pos":65,"start":1659645229604,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229628,"exec_count":52,"id":"723bc0","input":"X = banknotes_dataset[\"Counterfeit\"].to_numpy()\nY = banknotes_dataset[\"Diagonal\"].to_numpy()","kernel":"ds_env","no_halt":true,"pos":66,"start":1659645229624,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229640,"exec_count":53,"id":"af8bbe","input":"c_hat = lr.predict(x_test)","kernel":"ds_env","no_halt":true,"pos":67,"start":1659645229639,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229650,"exec_count":54,"id":"3cdc5a","input":"x_length = list(x_test[\"Length\"])","kernel":"ds_env","no_halt":true,"pos":68,"start":1659645229644,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229852,"exec_count":55,"id":"ead2e9","input":"plt.figure(figsize=(10,5))\nplt.plot(x_length, c_hat)\n\nplt.scatter(x_length, y_test, c='orange')\nplt.xlabel('x', fontsize = 20)\nplt.ylabel('y', fontsize = 20)\nplt.grid('on')\nplt.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"image/png":"447be70bf3fdfdf8587309bfcf0d885ebcf7579d","text/plain":"<Figure size 720x360 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":69,"start":1659645229654,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645229880,"exec_count":56,"id":"274445","input":"from sklearn.tree import DecisionTreeClassifier\nclf_dt = DecisionTreeClassifier(max_depth =3, random_state = 42)\nclf_dt.fit(x_train, y_train)\n","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(max_depth=3, random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(max_depth=3, random_state=42)</pre></div></div></div></div></div>","text/plain":"DecisionTreeClassifier(max_depth=3, random_state=42)"},"exec_count":56}},"pos":72,"start":1659645229859,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645230247,"exec_count":57,"id":"a4932c","input":"from sklearn import tree\n\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(30,10))\n\na = tree.plot_tree(clf_dt,\n\n             feature_names = input_columns.columns,\n\n                   class_names = str(new_banknotes_dataset.Counterfeit.unique()) ,\n\n                   rounded = True,\n\n                   filled = True,\n\n                   fontsize=14)\n\n\nfig = px.imshow(confusion_matrix(y_test, clf_dt.predict(x_test)), text_auto=True)\nfig.show()\nfig.write_html(\"Website/startbootstrap-stylish-portfolio-gh-pages/Dec_Tree_Conf_Mat.html\")\n\n","kernel":"ds_env","no_halt":true,"output":{"0":{"ename":"NameError","evalue":"name 'confusion_matrix' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [57]\u001b[0m, in \u001b[0;36m<cell line: 20>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m plt\u001b[38;5;241m.\u001b[39mfigure(figsize\u001b[38;5;241m=\u001b[39m(\u001b[38;5;241m30\u001b[39m,\u001b[38;5;241m10\u001b[39m))\n\u001b[1;32m      7\u001b[0m a \u001b[38;5;241m=\u001b[39m tree\u001b[38;5;241m.\u001b[39mplot_tree(clf_dt,\n\u001b[1;32m      8\u001b[0m \n\u001b[1;32m      9\u001b[0m              feature_names \u001b[38;5;241m=\u001b[39m input_columns\u001b[38;5;241m.\u001b[39mcolumns,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m     16\u001b[0m \n\u001b[1;32m     17\u001b[0m                    fontsize\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m14\u001b[39m)\n\u001b[0;32m---> 20\u001b[0m fig \u001b[38;5;241m=\u001b[39m px\u001b[38;5;241m.\u001b[39mimshow(\u001b[43mconfusion_matrix\u001b[49m(y_test, clf_dt\u001b[38;5;241m.\u001b[39mpredict(x_test)), text_auto\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m)\n\u001b[1;32m     21\u001b[0m fig\u001b[38;5;241m.\u001b[39mshow()\n\u001b[1;32m     22\u001b[0m fig\u001b[38;5;241m.\u001b[39mwrite_html(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mWebsite/startbootstrap-stylish-portfolio-gh-pages/Dec_Tree_Conf_Mat.html\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n","\u001b[0;31mNameError\u001b[0m: name 'confusion_matrix' is not defined"]},"1":{"data":{"image/png":"4bf3696a3ba3ed1ec09693e2ec4656fd3e9d57b2","text/plain":"<Figure size 2160x720 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":74,"start":1659645229886,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645230262,"exec_count":58,"id":"048ead","input":"#train score \nprint(clf_dt.score(x_train,y_train))\n#test score\nprint(clf_dt.score(x_test, y_test))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"1.0\n0.975\n"}},"pos":75,"start":1659645230255,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645230285,"exec_count":59,"id":"16e82c","input":"plt.update_layout(height = 400, width = 800)\nplt.show()\nplt.write_html(\"Website/startbootstrap-stylish-portfolio-gh-pages/decision_tree.html\")","kernel":"ds_env","no_halt":true,"output":{"0":{"ename":"AttributeError","evalue":"module 'matplotlib.pyplot' has no attribute 'update_layout'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","Input \u001b[0;32mIn [59]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43mplt\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mupdate_layout\u001b[49m(height \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m400\u001b[39m, width \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m800\u001b[39m)\n\u001b[1;32m      2\u001b[0m plt\u001b[38;5;241m.\u001b[39mshow()\n\u001b[1;32m      3\u001b[0m plt\u001b[38;5;241m.\u001b[39mwrite_html(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mWebsite/startbootstrap-stylish-portfolio-gh-pages/decision_tree.html\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n","\u001b[0;31mAttributeError\u001b[0m: module 'matplotlib.pyplot' has no attribute 'update_layout'"]}},"pos":76,"start":1659645230277,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645230314,"exec_count":60,"id":"46e5ca","input":"new_banknotes_dataset","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Index</th>\n      <th>Counterfeit</th>\n      <th>Length</th>\n      <th>Left</th>\n      <th>Right</th>\n      <th>Bottom</th>\n      <th>Top</th>\n      <th>Diagonal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>0</td>\n      <td>214.8</td>\n      <td>131.0</td>\n      <td>131.1</td>\n      <td>9.0</td>\n      <td>9.7</td>\n      <td>141.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0</td>\n      <td>214.6</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.1</td>\n      <td>9.5</td>\n      <td>141.7</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.7</td>\n      <td>9.6</td>\n      <td>142.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.6</td>\n      <td>7.5</td>\n      <td>10.4</td>\n      <td>142.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0</td>\n      <td>215.7</td>\n      <td>130.8</td>\n      <td>130.5</td>\n      <td>9.0</td>\n      <td>10.1</td>\n      <td>141.4</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>191</th>\n      <td>195</td>\n      <td>1</td>\n      <td>215.0</td>\n      <td>130.4</td>\n      <td>130.3</td>\n      <td>9.9</td>\n      <td>12.1</td>\n      <td>139.6</td>\n    </tr>\n    <tr>\n      <th>192</th>\n      <td>196</td>\n      <td>1</td>\n      <td>215.1</td>\n      <td>130.3</td>\n      <td>129.9</td>\n      <td>10.3</td>\n      <td>11.5</td>\n      <td>139.7</td>\n    </tr>\n    <tr>\n      <th>193</th>\n      <td>197</td>\n      <td>1</td>\n      <td>214.8</td>\n      <td>130.3</td>\n      <td>130.4</td>\n      <td>10.6</td>\n      <td>11.1</td>\n      <td>140.0</td>\n    </tr>\n    <tr>\n      <th>194</th>\n      <td>198</td>\n      <td>1</td>\n      <td>214.7</td>\n      <td>130.7</td>\n      <td>130.8</td>\n      <td>11.2</td>\n      <td>11.2</td>\n      <td>139.4</td>\n    </tr>\n    <tr>\n      <th>195</th>\n      <td>199</td>\n      <td>1</td>\n      <td>214.3</td>\n      <td>129.9</td>\n      <td>129.9</td>\n      <td>10.2</td>\n      <td>11.5</td>\n      <td>139.6</td>\n    </tr>\n  </tbody>\n</table>\n<p>196 rows Ã— 8 columns</p>\n</div>","text/plain":"    Index  Counterfeit  Length   Left  Right  Bottom   Top  Diagonal\n0       0            0   214.8  131.0  131.1     9.0   9.7     141.0\n1       1            0   214.6  129.7  129.7     8.1   9.5     141.7\n2       2            0   214.8  129.7  129.7     8.7   9.6     142.2\n3       3            0   214.8  129.7  129.6     7.5  10.4     142.0\n4       5            0   215.7  130.8  130.5     9.0  10.1     141.4\n..    ...          ...     ...    ...    ...     ...   ...       ...\n191   195            1   215.0  130.4  130.3     9.9  12.1     139.6\n192   196            1   215.1  130.3  129.9    10.3  11.5     139.7\n193   197            1   214.8  130.3  130.4    10.6  11.1     140.0\n194   198            1   214.7  130.7  130.8    11.2  11.2     139.4\n195   199            1   214.3  129.9  129.9    10.2  11.5     139.6\n\n[196 rows x 8 columns]"},"exec_count":60}},"pos":77,"start":1659645230310,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645230322,"exec_count":61,"id":"25730d","input":"print(input_columns.columns)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"Index(['Length', 'Left', 'Right', 'Bottom', 'Top', 'Diagonal'], dtype='object')\n"}},"pos":78,"start":1659645230319,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645230336,"exec_count":62,"id":"e919bd","input":"print (new_banknotes_dataset.Counterfeit.unique())","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"[0 1]\n"}},"pos":79,"start":1659645230325,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645230385,"exec_count":63,"id":"30afbc","input":" from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.datasets import make_classification","kernel":"ds_env","no_halt":true,"pos":81,"start":1659645230345,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645230530,"exec_count":64,"id":"036741","input":">>> rfc = RandomForestClassifier(max_depth=2, random_state=0)\n>>> rfc.fit(x_train, y_train)\n","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(max_depth=2, random_state=0)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(max_depth=2, random_state=0)</pre></div></div></div></div></div>","text/plain":"RandomForestClassifier(max_depth=2, random_state=0)"},"exec_count":64}},"pos":82,"start":1659645230389,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645230556,"exec_count":65,"id":"79a297","input":"rfc.score(x_test, y_test)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"1.0"},"exec_count":65}},"pos":83,"start":1659645230540,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645230578,"exec_count":66,"id":"c9ae43","input":"y_cat=rfc.predict(x_test)\n\nprint(y_cat)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"[1 1 1 0 1 0 1 0 0 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 0 0 0 1 1 1 0 1 0 1\n 0 0 1]\n"}},"pos":84,"start":1659645230561,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645230595,"exec_count":67,"id":"d90be6","input":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, y_cat))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        18\n           1       1.00      1.00      1.00        22\n\n    accuracy                           1.00        40\n   macro avg       1.00      1.00      1.00        40\nweighted avg       1.00      1.00      1.00        40\n\n"}},"pos":86,"start":1659645230582,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645230629,"exec_count":68,"id":"755676","input":"#train score \nprint(rfc.score(x_train,y_train))\n#test score\nprint(rfc.score(x_test, y_test))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"1.0\n1.0\n"}},"pos":87,"start":1659645230598,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645230657,"exec_count":69,"id":"4f6cf7","input":"fig = px.imshow(confusion_matrix(y_test, y_cat), text_auto=True)\nfig.show()\nfig.write_html(\"Website/startbootstrap-stylish-portfolio-gh-pages/random_forest.html\")","kernel":"ds_env","no_halt":true,"output":{"0":{"ename":"NameError","evalue":"name 'confusion_matrix' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [69]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m fig \u001b[38;5;241m=\u001b[39m px\u001b[38;5;241m.\u001b[39mimshow(\u001b[43mconfusion_matrix\u001b[49m(y_test, y_cat), text_auto\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m)\n\u001b[1;32m      2\u001b[0m fig\u001b[38;5;241m.\u001b[39mshow()\n\u001b[1;32m      3\u001b[0m fig\u001b[38;5;241m.\u001b[39mwrite_html(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mWebsite/startbootstrap-stylish-portfolio-gh-pages/random_forest.html\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n","\u001b[0;31mNameError\u001b[0m: name 'confusion_matrix' is not defined"]}},"pos":88,"start":1659645230655,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645230727,"exec_count":70,"id":"7f1312","input":"import sklearn\nfrom sklearn.neighbors import KNeighborsClassifier as KNN\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib.colors import ListedColormap\nfrom sklearn import neighbors, datasets\nfrom sklearn.inspection import DecisionBoundaryDisplay","kernel":"ds_env","no_halt":true,"pos":90,"start":1659645230672,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645230743,"exec_count":71,"id":"5191a2","input":"k=5\nmy_KNN_model = KNN(n_neighbors=k)","kernel":"ds_env","no_halt":true,"pos":91,"start":1659645230731,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645230768,"exec_count":72,"id":"8e9fd8","input":"my_KNN_model.fit(x_train, y_train)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div></div></div>","text/plain":"KNeighborsClassifier()"},"exec_count":72}},"pos":92,"start":1659645230762,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645230783,"exec_count":73,"id":"8b82e9","input":"p_hat = my_KNN_model.predict(x_test)","kernel":"ds_env","no_halt":true,"pos":93,"start":1659645230772,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645230804,"exec_count":74,"id":"2a25d4","input":"np.array(y_test)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"array([1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n       1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1])"},"exec_count":74}},"pos":94,"start":1659645230802,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645230814,"exec_count":75,"id":"58822f","input":"np.array(y_test)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"array([1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n       1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1])"},"exec_count":75}},"pos":95,"start":1659645230808,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645230829,"exec_count":76,"id":"2618bd","input":"total_squared_error = (np.sum((y_test - p_hat)**2))\nmean_squared_error = total_squared_error/len(y_test) \nprint(mean_squared_error)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"0.0\n"}},"pos":96,"start":1659645230828,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645231005,"exec_count":77,"id":"b37db6","input":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, p_hat), annot=True, fmt='g')","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":77},"1":{"data":{"image/png":"a0bc6592ccdd448fd65c3e5add7e00e09ee8162d","text/plain":"<Figure size 432x288 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":97,"scrolled":true,"start":1659645230841,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645231072,"exec_count":78,"id":"6a660e","input":"fig = px.imshow(confusion_matrix(y_test, p_hat), text_auto=True)\nfig.show()\nfig.write_html(\"Website/startbootstrap-stylish-portfolio-gh-pages/KNNconfusion_matrix.html\")\n\n\n","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"6202a624824643be05bd2d09850bce9a729c9dee"}}},"pos":98,"start":1659645231011,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645231098,"exec_count":79,"id":"739236","input":"#train score \nprint(my_KNN_model.score(x_train,y_train))\n#test score\nprint(my_KNN_model.score(x_test, y_test))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"1.0\n1.0\n"}},"pos":99,"start":1659645231080,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645231119,"exec_count":80,"id":"293e07","input":"from sklearn.datasets import make_hastie_10_2\nfrom sklearn.ensemble import GradientBoostingClassifier","kernel":"ds_env","no_halt":true,"pos":101,"start":1659645231108,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645231172,"exec_count":81,"id":"9d25d8","input":"MyGBC = GradientBoostingClassifier(n_estimators=100, learning_rate=1.0, max_depth=1, random_state=0).fit(x_train, y_train)","kernel":"ds_env","no_halt":true,"pos":102,"start":1659645231135,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645231184,"exec_count":82,"id":"f34534","input":"#train score \nprint(MyGBC.score(x_train,y_train))\n#test score\nprint(MyGBC.score(x_test, y_test))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"1.0\n0.975\n"}},"pos":103,"start":1659645231176,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645231213,"exec_count":83,"id":"ca27e1","input":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, y_hat))","kernel":"ds_env","no_halt":true,"output":{"0":{"ename":"NameError","evalue":"name 'y_hat' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [83]\u001b[0m, in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01msklearn\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mmetrics\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m classification_report\n\u001b[0;32m----> 2\u001b[0m \u001b[38;5;28mprint\u001b[39m(classification_report(y_test, \u001b[43my_hat\u001b[49m))\n","\u001b[0;31mNameError\u001b[0m: name 'y_hat' is not defined"]}},"pos":104,"start":1659645231188,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645233379,"exec_count":88,"id":"c35f41","input":"!pip install xgboost\nimport xgboost as xgb","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"Requirement already satisfied: xgboost in /projects/d5de4790-84b9-4555-9a80-ef455fafa128/.local/lib/python3.8/site-packages (1.6.1)\r\nRequirement already satisfied: numpy in /usr/local/lib/python3.8/dist-packages (from xgboost) (1.22.3)\r\nRequirement already satisfied: scipy in /usr/local/lib/python3.8/dist-packages (from xgboost) (1.8.0)\r\n"}},"pos":107,"start":1659645231315,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645233395,"exec_count":89,"id":"57e0f7","input":"from sklearn.tree import DecisionTreeClassifier","kernel":"ds_env","no_halt":true,"pos":108,"start":1659645233389,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645233406,"exec_count":90,"id":"394b82","input":"XGBModel = DecisionTreeClassifier().fit(x_train, y_train)","kernel":"ds_env","no_halt":true,"pos":109,"start":1659645233399,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645233419,"exec_count":91,"id":"2d8d95","input":"y_pot=XGBModel.predict(x_test)\ny_pot","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"array([1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n       1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1])"},"exec_count":91}},"pos":111,"start":1659645233413,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645233449,"exec_count":92,"id":"daa677","input":"XGBModel.score(x_train, y_train)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"1.0"},"exec_count":92}},"pos":112,"start":1659645233425,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645233471,"exec_count":93,"id":"38847d","input":"XGBModel.score(x_test, y_test)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"0.975"},"exec_count":93}},"pos":113,"start":1659645233468,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645233489,"exec_count":94,"id":"e9c88e","input":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, y_pot))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       1.00      0.94      0.97        18\n           1       0.96      1.00      0.98        22\n\n    accuracy                           0.97        40\n   macro avg       0.98      0.97      0.97        40\nweighted avg       0.98      0.97      0.97        40\n\n"}},"pos":114,"start":1659645233476,"state":"done","type":"cell"}
{"cell_type":"code","end":1659645233554,"exec_count":98,"id":"cccddd","input":"# Nolawi","kernel":"ds_env","no_halt":true,"pos":119,"start":1659645233546,"state":"done","type":"cell"}
{"cell_type":"code","id":"0f6bcc","input":"","pos":18,"type":"cell"}
{"cell_type":"code","id":"358dfa","input":"","pos":85,"type":"cell"}
{"cell_type":"code","id":"42e4e7","input":"","pos":110,"type":"cell"}
{"cell_type":"code","id":"59500d","input":"","pos":11,"type":"cell"}
{"cell_type":"code","id":"638032","input":"","pos":73,"type":"cell"}
{"cell_type":"code","id":"63aedb","input":"","pos":3,"type":"cell"}
{"cell_type":"code","id":"852cad","input":"","pos":106,"type":"cell"}
{"cell_type":"code","id":"86026c","input":"","pos":70,"type":"cell"}
{"cell_type":"code","id":"b072df","input":"","pos":35,"type":"cell"}
{"cell_type":"code","id":"c9699e","input":"","pos":13,"type":"cell"}
{"cell_type":"code","id":"e79101","input":"","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"003b49","input":"# Exploratory Data Analysis\n\n","pos":19,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"130e68","input":"### Jayden - SVC\n\n","pos":59,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"253e0d","input":"### Dhruv - Logistic Regression\n\n","pos":47,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"32e0db","input":"### Dhrupadh - Boosting","pos":100,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"38866a","input":"## Dhrupadh \\- XGBoosting\n\n","pos":105,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"3db677","input":"# Perform Preprocessing of Data\n\n","pos":7,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"5b2bf4","input":"### Holly - Random Forest\n\n","pos":80,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"61b81d","input":"# 2D Plot Data & Analysis:\n\nMatthew:\n\n","pos":34,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"629f21","input":"# Import Libraries","pos":2,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"8d2bb0","input":"Apply Split -> Fit -> Predict -> Evaluate for all machine learning models.\n\n","pos":45,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"cb794f","input":"# From 3D Plots & Further Analysis:\n\nDhrupadh: \n\nSo what we can see from the plots are the correlation between many of these 3D groups and where the counterfeit outputs tend to be distinct from the \"real\" values. We can see the clear difference in the plots and it really helps to visualize what correlation each column of the data set has with other columns and how it will affect the outcome of how it is counterfeit or not. In some plots we can see a very clear difference between the two different banknotes. In other plots, there are aspects that we can notice about the different banknote types that may not exactly show a complete split between the two but that one seems to span across the whole plot while the other value will end up sticking towards the bottom. The plots also help us notice a lot of outliers and see the nature of our data visually.\n","pos":20,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"cfbd9a","input":"### Matthew - KNN\n\n","pos":89,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"d240e2","input":"# Machine Learning","pos":44,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"d3fe39","input":"### Nolawi - Decision Tree\n\n","pos":71,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"faa94c","input":"Write a function that takes in the values of the note dimensions and return the predicted values for a given input. For example:\nif I pass the following:\n> length: 150\n> top: 130\n> right: 50\n> bottom: 130\n> left: 50 \n> diagonal: 200\n\nthe function should use logistic regression to predict if the note is ligit or fake.","pos":115,"state":"done","type":"cell"}
{"end":1659645225153,"exec_count":1,"id":"2e8c0b","input":"c = a + b\nc","kernel":"ds_env","no_halt":true,"output":{"0":{"ename":"NameError","evalue":"name 'a' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [1]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m c \u001b[38;5;241m=\u001b[39m \u001b[43ma\u001b[49m \u001b[38;5;241m+\u001b[39m b\n\u001b[1;32m      2\u001b[0m c\n","\u001b[0;31mNameError\u001b[0m: name 'a' is not defined"]}},"pos":0,"start":1659645224205,"state":"done","type":"cell"}
{"end":1659645231220,"exec_count":84,"id":"d2093b","input":"from sklearn.ensemble import BaggingClassifier","kernel":"ds_env","no_halt":true,"pos":104.5,"start":1659645231216,"state":"done","type":"cell"}
{"end":1659645231228,"exec_count":85,"id":"b245e9","input":"bag = BaggingClassifier()","kernel":"ds_env","no_halt":true,"pos":104.75,"start":1659645231223,"state":"done","type":"cell"}
{"end":1659645233504,"exec_count":95,"id":"7e7b68","input":"x_test.head()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Length</th>\n      <th>Left</th>\n      <th>Right</th>\n      <th>Bottom</th>\n      <th>Top</th>\n      <th>Diagonal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>194</th>\n      <td>214.7</td>\n      <td>130.7</td>\n      <td>130.8</td>\n      <td>11.2</td>\n      <td>11.2</td>\n      <td>139.4</td>\n    </tr>\n    <tr>\n      <th>129</th>\n      <td>214.6</td>\n      <td>130.2</td>\n      <td>130.4</td>\n      <td>10.5</td>\n      <td>11.8</td>\n      <td>139.7</td>\n    </tr>\n    <tr>\n      <th>156</th>\n      <td>215.6</td>\n      <td>130.1</td>\n      <td>129.7</td>\n      <td>7.4</td>\n      <td>12.2</td>\n      <td>138.4</td>\n    </tr>\n    <tr>\n      <th>93</th>\n      <td>214.4</td>\n      <td>129.7</td>\n      <td>129.5</td>\n      <td>8.0</td>\n      <td>10.3</td>\n      <td>141.2</td>\n    </tr>\n    <tr>\n      <th>165</th>\n      <td>214.9</td>\n      <td>130.0</td>\n      <td>129.9</td>\n      <td>11.4</td>\n      <td>10.9</td>\n      <td>139.7</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"     Length   Left  Right  Bottom   Top  Diagonal\n194   214.7  130.7  130.8    11.2  11.2     139.4\n129   214.6  130.2  130.4    10.5  11.8     139.7\n156   215.6  130.1  129.7     7.4  12.2     138.4\n93    214.4  129.7  129.5     8.0  10.3     141.2\n165   214.9  130.0  129.9    11.4  10.9     139.7"},"exec_count":95}},"pos":116,"start":1659645233492,"state":"done","type":"cell"}
{"end":1659645233524,"exec_count":96,"id":"77f515","input":"banknotes_dataset","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Counterfeit</th>\n      <th>Length</th>\n      <th>Left</th>\n      <th>Right</th>\n      <th>Bottom</th>\n      <th>Top</th>\n      <th>Diagonal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>131.0</td>\n      <td>131.1</td>\n      <td>9.0</td>\n      <td>9.7</td>\n      <td>141.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>214.6</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.1</td>\n      <td>9.5</td>\n      <td>141.7</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.7</td>\n      <td>8.7</td>\n      <td>9.6</td>\n      <td>142.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>214.8</td>\n      <td>129.7</td>\n      <td>129.6</td>\n      <td>7.5</td>\n      <td>10.4</td>\n      <td>142.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>215.0</td>\n      <td>129.6</td>\n      <td>129.7</td>\n      <td>10.4</td>\n      <td>7.7</td>\n      <td>141.8</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>195</th>\n      <td>1</td>\n      <td>215.0</td>\n      <td>130.4</td>\n      <td>130.3</td>\n      <td>9.9</td>\n      <td>12.1</td>\n      <td>139.6</td>\n    </tr>\n    <tr>\n      <th>196</th>\n      <td>1</td>\n      <td>215.1</td>\n      <td>130.3</td>\n      <td>129.9</td>\n      <td>10.3</td>\n      <td>11.5</td>\n      <td>139.7</td>\n    </tr>\n    <tr>\n      <th>197</th>\n      <td>1</td>\n      <td>214.8</td>\n      <td>130.3</td>\n      <td>130.4</td>\n      <td>10.6</td>\n      <td>11.1</td>\n      <td>140.0</td>\n    </tr>\n    <tr>\n      <th>198</th>\n      <td>1</td>\n      <td>214.7</td>\n      <td>130.7</td>\n      <td>130.8</td>\n      <td>11.2</td>\n      <td>11.2</td>\n      <td>139.4</td>\n    </tr>\n    <tr>\n      <th>199</th>\n      <td>1</td>\n      <td>214.3</td>\n      <td>129.9</td>\n      <td>129.9</td>\n      <td>10.2</td>\n      <td>11.5</td>\n      <td>139.6</td>\n    </tr>\n  </tbody>\n</table>\n<p>200 rows Ã— 7 columns</p>\n</div>","text/plain":"     Counterfeit  Length   Left  Right  Bottom   Top  Diagonal\n0              0   214.8  131.0  131.1     9.0   9.7     141.0\n1              0   214.6  129.7  129.7     8.1   9.5     141.7\n2              0   214.8  129.7  129.7     8.7   9.6     142.2\n3              0   214.8  129.7  129.6     7.5  10.4     142.0\n4              0   215.0  129.6  129.7    10.4   7.7     141.8\n..           ...     ...    ...    ...     ...   ...       ...\n195            1   215.0  130.4  130.3     9.9  12.1     139.6\n196            1   215.1  130.3  129.9    10.3  11.5     139.7\n197            1   214.8  130.3  130.4    10.6  11.1     140.0\n198            1   214.7  130.7  130.8    11.2  11.2     139.4\n199            1   214.3  129.9  129.9    10.2  11.5     139.6\n\n[200 rows x 7 columns]"},"exec_count":96}},"pos":117,"start":1659645233508,"state":"done","type":"cell"}
{"end":1659645233541,"exec_count":97,"id":"2ec11b","input":"logisticRegr.predict([[215, 130, 130, 8.7, 10, 141]])","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stderr","text":"/projects/d5de4790-84b9-4555-9a80-ef455fafa128/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/base.py:450: UserWarning:\n\nX does not have valid feature names, but LogisticRegression was fitted with feature names\n\n"},"1":{"data":{"text/plain":"array([0])"},"exec_count":97}},"pos":118,"start":1659645233529,"state":"done","type":"cell"}
{"end":1659645233563,"exec_count":99,"id":"0741fb","input":"def nolawi(Length, Left, Right, Bottom, Top, Diagonal):\n\n    ","kernel":"ds_env","no_halt":true,"output":{"0":{"ename":"SyntaxError","evalue":"unexpected EOF while parsing (522278001.py, line 1)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [99]\u001b[0;36m\u001b[0m\n\u001b[0;31m    def nolawi(Length, Left, Right, Bottom, Top, Diagonal):\u001b[0m\n\u001b[0m                                                           ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m unexpected EOF while parsing\n"]}},"pos":120,"start":1659645233557,"state":"done","type":"cell"}
{"end":1659645233573,"exec_count":100,"id":"37fd27","input":"# Matthew","kernel":"ds_env","no_halt":true,"pos":121,"start":1659645233572,"state":"done","type":"cell"}
{"end":1659645233592,"exec_count":101,"id":"5fa62e","input":"def Matthew(Length, Right, Left, Top, Bottom, Diagonal):\n    return(Length, Right, Left, Top, Bottom, Diagonal)\n#     logisticRegr.predict([[215, 130, 130, 8.7, 10, 141]])","kernel":"ds_env","no_halt":true,"pos":122,"start":1659645233591,"state":"done","type":"cell"}
{"end":1659645233606,"exec_count":102,"id":"f0d3fd","input":"x=9\ny=10\ndef add_numbers(x, y):\n    print(add_numbers)","kernel":"ds_env","no_halt":true,"pos":123,"start":1659645233595,"state":"done","type":"cell"}
{"end":1659645233620,"exec_count":103,"id":"004a60","input":"a = 1\nb = 0","kernel":"ds_env","no_halt":true,"pos":125,"start":1659645233610,"state":"done","type":"cell"}
{"end":1659645233628,"exec_count":104,"id":"1ca3f0","input":"def Matthew(Length, Right, Left, Top, Bottom, Diagonal):\n    if (np.where(x = ))","kernel":"ds_env","no_halt":true,"output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (2574246272.py, line 2)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [104]\u001b[0;36m\u001b[0m\n\u001b[0;31m    if (np.where(x = ))\u001b[0m\n\u001b[0m                     ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":126,"start":1659645233624,"state":"done","type":"cell"}
{"end":1659645233635,"exec_count":105,"id":"def467","input":"# function starts","kernel":"ds_env","no_halt":true,"pos":126.21875,"start":1659645233632,"state":"done","type":"cell"}
{"end":1659645233646,"exec_count":106,"id":"5b66a5","input":"logisticRegr.predict(x_test)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"array([1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n       1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1])"},"exec_count":106}},"pos":126.2265625,"start":1659645233638,"state":"done","type":"cell"}
{"end":1659645233659,"exec_count":107,"id":"ab4255","input":"np.array(x_test)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"array([[214.7, 130.7, 130.8,  11.2,  11.2, 139.4],\n       [214.6, 130.2, 130.4,  10.5,  11.8, 139.7],\n       [215.6, 130.1, 129.7,   7.4,  12.2, 138.4],\n       [214.4, 129.7, 129.5,   8. ,  10.3, 141.2],\n       [214.9, 130. , 129.9,  11.4,  10.9, 139.7],\n       [214.4, 129.9, 129.6,   7.5,  10.5, 141.8],\n       [214.9, 130.3, 130.5,  11.6,  10.6, 139.8],\n       [214.5, 129.8, 129.8,   9.3,   8.5, 141.6],\n       [214.6, 129.7, 129.8,   7.9,  10.3, 141.1],\n       [214.9, 130.5, 130.2,  10.6,  11.5, 139.9],\n       [214.9, 129.4, 129.5,   8.2,   9.9, 141.5],\n       [214.8, 129.6, 130. ,  10.4,  11.6, 139.2],\n       [214.8, 129.9, 129.7,   7.3,  10.9, 142. ],\n       [214.2, 130.6, 130.4,  12. ,  10.2, 139.6],\n       [214.9, 130.6, 130.4,  11.9,  10.5, 139.8],\n       [214.7, 130.2, 130.1,  10.7,  11. , 139.4],\n       [214.6, 129.8, 129.4,   7.4,  10.6, 141. ],\n       [214.8, 131. , 131.1,   9. ,   9.7, 141. ],\n       [214.3, 129.9, 129.9,  10.2,  11.5, 139.6],\n       [214.9, 130. , 130.3,  10.2,  11.4, 139.6],\n       [215.5, 130.7, 130.3,  10.2,  11.8, 140. ],\n       [214.9, 130.4, 130.2,  11.9,  10.7, 139. ],\n       [215. , 130.5, 130.4,  10.6,  11.1, 139.9],\n       [215.4, 130.2, 130.2,   7.6,  10.9, 141.6],\n       [214.6, 130.1, 130. ,  11.5,  10.6, 139.5],\n       [215.4, 129.8, 129.4,   8. ,  10.6, 141.5],\n       [215.3, 130.4, 130.4,   8. ,  11. , 142.3],\n       [214.6, 129.5, 129.2,   7.7,  10.3, 141.3],\n       [215.5, 129.5, 129.7,   7.9,   9.6, 141.6],\n       [215.1, 130.1, 129.9,   7.9,  11. , 141.3],\n       [214.7, 130. , 129.4,  10.2,  11. , 139.2],\n       [215. , 130.2, 130.2,  10.6,  10.7, 139.9],\n       [215.3, 130.8, 131.1,  11.6,  10.6, 140.2],\n       [214.6, 129.8, 129.4,   7.2,  10. , 141.3],\n       [214.8, 130.1, 130. ,  11.4,  10.5, 139.6],\n       [215.7, 130.2, 130. ,   8.7,  10. , 141.6],\n       [214.3, 130.3, 130. ,  11.4,  10.5, 139.8],\n       [215.1, 130. , 129.8,   8.2,  10.3, 141.4],\n       [215.2, 129.7, 129.4,   9.2,   9.4, 142. ],\n       [214.5, 129.8, 129.8,  11.4,  10. , 139.3]])"},"exec_count":107}},"pos":126.234375,"start":1659645233649,"state":"done","type":"cell"}
{"end":1659645233673,"exec_count":108,"id":"497804","input":"logisticRegr.predict([[215, 130, 130, 8.7, 10, 141]]) # this one","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stderr","text":"/projects/d5de4790-84b9-4555-9a80-ef455fafa128/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/base.py:450: UserWarning:\n\nX does not have valid feature names, but LogisticRegression was fitted with feature names\n\n"},"1":{"data":{"text/plain":"array([0])"},"exec_count":108}},"pos":126.25,"start":1659645233663,"state":"done","type":"cell"}
{"end":1659645233691,"exec_count":109,"id":"bdcf67","input":"def pred_note(Length, Right, Left, Top, Bottom, Diagonal):\n    return logisticRegr.predict([[Length, Right, Left, Top, Bottom, Diagonal]])[0]","kernel":"ds_env","no_halt":true,"pos":126.5,"start":1659645233677,"state":"done","type":"cell"}
{"end":1659645233703,"exec_count":110,"id":"30e46f","input":"pred_note(215, 130, 130, 8.7, 10, 141)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stderr","text":"/projects/d5de4790-84b9-4555-9a80-ef455fafa128/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/base.py:450: UserWarning:\n\nX does not have valid feature names, but LogisticRegression was fitted with feature names\n\n"},"1":{"data":{"text/plain":"0"},"exec_count":110}},"pos":127,"start":1659645233695,"state":"done","type":"cell"}
{"end":1659645233727,"exec_count":111,"id":"c00f56","input":"pred_note(215, 130, 130, 11, 10, 3)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stderr","text":"/projects/d5de4790-84b9-4555-9a80-ef455fafa128/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/base.py:450: UserWarning:\n\nX does not have valid feature names, but LogisticRegression was fitted with feature names\n\n"},"1":{"data":{"text/plain":"1"},"exec_count":111}},"pos":128,"start":1659645233706,"state":"done","type":"cell"}
{"end":1659645233737,"exec_count":112,"id":"041440","input":"import pickle","kernel":"ds_env","no_halt":true,"pos":138,"start":1659645233734,"state":"done","type":"cell"}
{"end":1659645233749,"exec_count":113,"id":"080e73","input":"with open(\"logit.pickle\", \"wb\") as f:\n    pickle.dump(logisticRegr, f)","kernel":"ds_env","no_halt":true,"pos":139,"start":1659645233748,"state":"done","type":"cell"}
{"end":1659645339602,"exec_count":119,"id":"728213","input":"def multi_learner_model(model1, model2, model3, model4, model5):\n    pred1 = model1.predict(x_test)\n    pred2 = model2.predict(x_test)\n    pred3 = model3.predict(x_test)\n    pred4 = model4.predict(x_test)\n    pred5 = model5.predict(x_test)\n    \n    sum = pred1 + pred2 + pred3 + pred4 + pred5\n    return sum/5","kernel":"ds_env","pos":104.9375,"start":1659645339596,"state":"done","type":"cell"}
{"end":1659645340946,"exec_count":120,"id":"ebd481","input":"multi_learner_model(logisticRegr, rfc, clf_dt, my_KNN_model, MyGBC)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"array([1. , 1. , 1. , 0. , 1. , 0. , 1. , 0. , 0. , 1. , 0. , 1. , 0. ,\n       1. , 1. , 1. , 0. , 0.4, 1. , 1. , 1. , 1. , 1. , 0. , 1. , 0. ,\n       0. , 0. , 0. , 0. , 1. , 1. , 1. , 0. , 1. , 0. , 1. , 0. , 0. ,\n       1. ])"},"exec_count":120}},"pos":104.953125,"start":1659645340906,"state":"done","type":"cell"}
{"id":"052a26","input":"","pos":104.96875,"type":"cell"}
{"id":"1c2e58","input":"","pos":126.125,"type":"cell"}
{"id":"4b59f0","input":"class multi_learner_model():\n    def __init__(self, model1, model2, model3):\n        self.model1 = model1\n        self.model2 = model2\n        self.model3 = model3\n        \n    def predictor(self, x_test, y_test):\n        pred1 = fit1.predict(x_test)\n        pred2 = fit2.predict(x_test)\n        pred3 = fit3.predict(x_test)\n        \n    def fit(self, x_train, y_train):\n        fit1 = self.model1.fit(x_train, y_train)\n        fit2 = self.model2.fit(x_train, y_train)\n        fit3 = self.model3.fit(x_train, y_train)","pos":104.875,"type":"cell"}
{"id":"7cc60d","input":"","pos":126.1875,"type":"cell"}
{"id":"966cef","input":"","pos":124,"type":"cell"}
{"id":"bd2f1f","input":"","pos":140,"type":"cell"}
{"id":"d023e5","input":"","pos":104.984375,"type":"cell"}
{"id":"fe62f0","input":"","pos":141,"type":"cell"}
{"id":0,"time":1659641149925,"type":"user"}
{"last_load":1659632556508,"type":"file"}